#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Dev
# ══════════════════════════════════════════════════════════════════════════════

# ............................................................. Print code block

usage() {
	echo "$(basename $0) case | do | if <file> -> code block (shell)
$(basename $0) <begin> <end> <file>  -> code block
> - nested code blocks may result in incomplete outer block printing
> - keywords (in comments or vars) may trigger false code block printing
$(basename $0) <begin> <file>        -> match .. +$lines lines" | usage:
	exit 1
}

# for shell script inspection/review

lines=4  # nuxber of lines to print after match

while [ "$1" ] ;do
	case $1 in
		help ) usage ;;
		case ) type=$1; begin='case .* in' ;;
		do   ) type=$1; begin='(for|while) .*; *do' ;;
		if   ) type=$1; begin='if .*; *then' ;;

		*    )
			[ -e $1 ] && { file=$1; break; }
			[ "$begin" ] && { type=blk; end="$1"; } || { type=stmt; begin="$1"; } ;;
	esac
	shift
done

filter() {
	case $type in
		case ) sed -nr '/\bcase\b .* in/,/\besac\b/p' ;;
		do   ) sed -nr '/(\bfor\b|\bwhile\b) .*; *do/,/\bdone\b/p' ;;
		if   ) sed -nr '/\bif\b .*; *then/,/\bfi\b/p' ;;
		blk  ) sed -nr "/$begin/,/$end/p" ;;
		stmt ) grep -A$lines -E "$begin" ;;
	esac
}

match() {
	clear; ditto $type $1
	cat $1 | filter | env tab=soft print
	[ $file ] || { ifno "edit $1" || vim -g -f $1; }
}

if [ $file ] ;then
	match $file
else
	for i in $(al "$begin") ;do
		match $i
	done
fi

# kak: filetype=sh
