#!/usr/bin/bash
# sdothum - 2016 (c) wtfpl

# Dev
# ══════════════════════════════════════════════════════════════════════════════

# .................................................................. Add to repo

usage() { echo "$(basename $0) <file>* <path>*
> where, <path> is relative to $REPO
>        <path> only adds files maxdepth 1
>        <file> symlinks are ignored" | usage:
	exit 1
}

# IMPORTANT: exclude must include .gitignore (will cause race condition otherwise ??)

REPO=${REPO:-$STOW}
IGNORE=$REPO/.hgadd:ignore
output=quiet  # verbose
delay=20      # notificaton duration

[ "$1" ] || usage

exclude=${exclude:-$(cat $IGNORE | tr '\n' '|' | sed 's/[|]*$//; 1i.git*\n.hg*')}  # see note above!

exclude()   { grep -E -v "$exclude"; }  # exclude projects not in $STOW
changed()   { hg files --cwd $REPO "$file" >/dev/null || return 0; hg diff --stat --cwd $REPO "$file" | grep -q "changed"; }
hgadd()     { ! changed && return; hg add --$output --cwd $REPO "$file" 2>/dev/null; files="$files  ${file#$REPO/}"; }
addfile()   { for file in $(find $REPO -regex ".*${i#$HOME/}" | exclude) ;do hgadd ;done }  # handle multifile name match
addfolder() { for file in $(find $i -maxdepth 1 -type f | exclude) ;do hgadd ;done }

for i in $@ ;do
	[ -d $i ] && { addfolder ; continue; }
	[ -e $i ] && { addfile   ; continue; }
	notify $delay warning hgadd "$i\nnot in ${REPO##*/} repository"
done

[ "$files" ] || exit 1  # non-interested source changes
notify 'Mercurial' "$(echo "${files#  }" | sed 's,  ,\n,g')"            # newline on /path
hg commit --$output --cwd $REPO -m "$(date -R | cut -d- -f1) ..$files"  # see hgl alias (hg log) for compact listing

# vim: set ft=sh: #
