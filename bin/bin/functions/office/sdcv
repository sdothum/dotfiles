#!/usr/bin/bash
# sdothum - 2016 (c) wtfpl

# Office
# ══════════════════════════════════════════════════════════════════════════════

# ................................................................... Dictionary

usage() { usage: "$(basename $0) -dict | -et | ud | uk | wn | -th [[-_=]<maxlen> | -] <word>, '-' (include phrases)"; exit 1; }

SDCV=/usr/bin/sdcv
WORDNET="$SDCV -c -n -u 'WordNet® 3.0 (En-En)'"
TH="$SDCV -n -u 'Moby Thesaurus II'"
OXFORD="$SDCV -c -n -u 'Concise Oxford English Dictionary (En-En)' -u 'Concise Oxford Thesaurus 2nd Ed. (Eng-Eng)'"
DICT="$SDCV -c -n -u 'dictd_www.dict.org_gcide'"
ETYM="$SDCV -c -n -u 'Online Etymology Dictionary'"
URBAN="$SDCV -c -n -u 'Urban Dictionary'"

cols() { sed 's/^/ /' | columns; }  # min double space between columns

th() {
	case $1 in
		-  ) SPACES=true; shift ;;

		-* )  # hyphen
			MAXLEN="$(seq -s. 0 ${1#?} | tr -d '[:digit:]')[^ ]"  # mixed length list
			shift ;;

		_* )  # underscore
			for i in $(seq 2 ${1#?} | tac) ;do  # iterative length list
	 			ditto $2 "${i} char"
				sdcv -th =$i $2
			done
			exit ;;

		=*  )
			LENGTH="^$(seq -s. 0 ${1#?} | tr -d '[:digit:]' | sed 's/[.]/[^ ]/g')$"  # exact length list
			shift ;;
	esac
	[ $1 ] || usage
	[ $2 ] && usage

	# tricky bit to trap CR at end of list.. add , (comma) to every line!
	eval $TH $1 | grep -q "^-->$1" && output=$(eval $TH $1 | sed '1,5d; s/$/,/' | tr '\n' ' ' | tr ',' '\n' | sed 's/^ *//g') || exit

	# trim trailing dictionary content following moby thesaurus
	while echo "$output" | grep -q '^From.*Dictionary' ;do
		output=$(echo "$output" | grep -B9999 '^From.*Dictionary' | head -n -1)
	done

	if [ "$MAXLEN" ] ;then
		echo "$output" | grep -v "$MAXLEN" | cols  # word length cutoff
	elif [ "$LENGTH" ] ;then
		echo "$output" | grep "$LENGTH" | cols     # exact word length match
	elif [ "$SPACES" ] ;then
		echo "$output" | cols
	else
		echo "$output" | grep -v " " | cols        # words only (no phrases)
	fi
}

case $1 in
	-wn  ) shift; eval $WORDNET $@ | sed '1,5d' ;;
	-th  ) shift; th $@ ;;
	-uk  ) shift; eval $OXFORD  $@ | sed '1d' ;;
	-di* ) shift; eval $DICT    $@ | sed '1d' ;;
	-ud* ) shift; eval $URBAN   $@ | sed '1d' | elinks -dump | sed 's/^.*\[0m //' ;;
	-et* ) shift; eval $ETYM    $@ | sed "1,3d; s/<dd>/<br><br><dd>/" | elinks -dump ;;
	*    ) $SDCV -c $@ ;;
esac | sed "s|<br />[ \t]*|\n |g" | sed -z 's/\n\n\n/\n/g' | print  # null (-z) line terminator to remove '\n\n\n'

# kak: filetype=sh
