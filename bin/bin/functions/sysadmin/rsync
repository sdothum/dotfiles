#!/usr/bin/bash
# sdothum - 2016 (c) wtfpl

# Sysadmin
# ══════════════════════════════════════════════════════════════════════════════

# ................................................................ Rsync wrapper

usage() { echo "$(basename $0) $(ls -1 ${0%/rsync}/functions/rsync | tr '\n' ' ' | sed 's/ / | /g; s/ | $//')
> [--dryrun] [<option>*] <source> <target>
>                        <branch>, where /home/<branch> to /net/home/" | usage:
	exit 1
}

[[ "$1" = *dryrun* ]] && { DRYRUN=$1; shift; }
[ $CRONCOLORS ]       || . $HOME/bin/functions/shell/user_path  # bash shell required for cron colors

laptop=${laptop:-lumen}
netbook=${netboot:-monad}
server && target=$laptop || target=$SERVER
[ $1 ] || usage

rsync() {
	eval ditto rsync \"$@\"
	# echo $SUDO /usr/bin/rsync -a --info=progress2 --exclude='lost+found' $@
	$SUDO /usr/bin/rsync $DRYRUN -a --info=progress2 --ignore-errors --exclude='lost+found' $@ 2>>/tmp/update:rsync.log
}

msg=$1
if [ -e /home/$msg ] ;then
	[ "/home/$msg" = "$HOME" ] && ifno 'instead of "home"?' && exit
	trace -- backup /home/$msg
	rsync -r --no-compress --links --safe-links --delete /home/$msg /net/home/
	df -h
elif [ -e ${0%/rsync}/functions/rsync/$msg ] ;then
	. ${0%/rsync}/functions/rsync/$msg $@
else
	rsync $@  # cli command usage
fi

sync
trace --  # elapsed time if monitoring

# kak: filetype=sh
