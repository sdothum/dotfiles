#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Sysadmin
# ══════════════════════════════════════════════════════════════════════════════

# ......................................................... Init service wrapper

openrc() {
	usage() { usage: "$(basename $0) [add | delete | show | start | stop | restart | status | list] <service> [runlevel]"; exit 1; }

	rc() { eval sudo rc-update  $1 $2 $3; }
	sv() { eval sudo rc-service $1 $2 $3; }

	# configure openrc daemon
	case $1 in
		''      ) rc show; usage                 ;;
		add     ) rc add $2 $3                   ;;
		delete  ) rc delete $2 $3                ;;
		show    ) rc show                        ;;
		start   ) sv $2 start                    ;;
		restart ) sv $2 stop; sudo killall -q $2; sv $2 start ;; 
		stop    ) sv $2 stop; sudo killall -q $2 ;;  # kill dangling daemons
		status  ) sv $2 status                   ;;
		list    ) sv --list | column; usage      ;;
		*       ) [ $2 ] && usage || sv $1 status || usage ;;
	esac
	exit
}

runit() {
	usage() { usage: "$(basename $0) [UP | [status | disable | enable | up | down | restart | mask] <service>]"; exit 1; }

	SV='sudo /usr/bin/sv'

	check()   { [ $service ] && [ -e /etc/sv/$service ] || usage; }
	enabled() { [ -L /var/service/$service ]; }
	status()  { sleep 1; enabled && { $SV status $service 2>/dev/null; true; } || ditto service "$service unavailable"; }

	service=$2
	case $1 in
		''      ) ls /etc/sv; exit ;;
		UP      ) ls /var/service; sudo find /etc/sv -name down; exit ;;  # running services
		disable ) check ;;
		down    ) check ;;
		stop    ) check ;;  # alias
		enable  ) check ;;
		mask    ) check ;;
		restart ) check ;;
		status  ) check ;;
		up      ) check ;;
		start   ) check ;;  # alias
		*       ) service=$1; check; cat /etc/sv/$service/run; underline ;;
	esac

	# configure runit daemon
	case $1 in
		disable ) sudo rm -fv /var/service/$service ;;
		stop    |\
		down    ) enabled && $SV down $service; status ;;
		enable  ) sudo ln -sfv /etc/sv/$service /var/service/; sudo rm -f /etc/sv/$service/down; status ;;
		mask    ) enabled && sudo touch /etc/sv/$service/down; status ;;  # down at boot
		restart ) enabled && runit stop $service || runit start $service; status ;;
		status  ) status ;;
		start   |\
		up      ) enabled && $SV up $service; status ;;
		*       ) enabled && status || usage ;;
	esac
	exit
}

dinit() {
	usage() { usage: "$(basename $0) [list | disable | enable | start | stop | restart] <service>"; exit 1; }

	sv() { eval sudo dinitctl $1 $2; }

	# configure dinit daemon
	case $1 in
		''      ) usage ;;
		disable ) sv $1 $2 ;;
		enable  ) sv $1 $2 ;;
		restart ) sv $1 $2 ;;
		start   ) sv $1 $2 ;;
		stop    ) sv $1 $2 ;;
		list    ) sv $1 $2 ;;
		*       ) usage ;;
	esac
	exit
}

s6() {
	usage() { usage: "$(basename $0) [info | disable | enable | start | stop | restart | toggle] <service>"; exit 1; }

	sv() { eval sudo 66-$1 $2 $3; }

	# configure s6 daemon
	case $1 in
		''      ) usage ;;
		disable ) sv disable -S $2 ;;
		enable  ) sv enable -S $2 ;;
		info    ) ;;
		restart ) sv stop $2; sv start $2 ;;
		up      |\
		start   ) sv start $2 ;;
		status  ) ;;
		down    |\
		stop    ) sv stop $2 ;;
		toggle  ) sv info -S $2 | grep -v 'Enabled, up' && sv stop $2 || sv start $2 ;;
		*       ) [ $# -eq 1 ] || usage ;;
	esac

	sv info -S ${2:-$1}
	exit
}

systemd() {
	usage() { usage: "$(basename $0) [status | disable | enable | start | stop | restart | toggle | [-f] mask | unmask | reload] <service>"; exit 1; }

	sv() { eval sudo systemctl $@; }

	# configure systemd daemon
	[ "$1" = '-f' ] && { force=true; shift; }
	case $1 in
		''      ) usage ;;
		disable ) sv disable $2; sv stop $2 ;;
		enable  ) sv enable $2; sv start $2 ;;
		info    ) ;;
		mask    ) [ $force ] || { ifno "mask $2" && exit || true; } && sv mask $2; exit ;;
		reload  ) sv daemon-reload; exit ;;
		restart ) sv restart $2 ;;
		up      |\
		start   ) sv start $2 ;;
		status  ) ;;
		down    |\
		stop    ) sv stop $2 ;;
		toggle  ) sv status $2 >/dev/null 2>&1 && sv stop $2 || sv start $2 2>/dev/null ;;
		unmask  ) sv unmask $2; exit ;;
		*       ) [ $# -eq 1 ] || usage ;;
	esac

	sv --no-pager status ${2:-$1}
	exit
}

exists openrc && openrc $@ || exists runit && runit $@ || exists dinit && dinit $@ || exists s6 && s6 $@ || systemd $@

# kak: filetype=sh
