#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Fonts
# ══════════════════════════════════════════════════════════════════════════════

# ...................................................................... iosevka

# HISTORY: Iosevka directory and file (naming conventions) changed with version 3x

ditto "major refactoring untested !!"
ditto "see font/iosevka"

# ifno "free memory: kill all browsers.." && exit
# pkill -f ".*http.*"

usage() {
	echo "$(basename $0) iosevka ebook | kindle | kobo | koreader
>> cyrillic | fluent | latin+greek
>> classic | coding | quad | mu | serifless | serifed | trio | web
>> altmono | book+regular | expanded | grote | open[+]

>> D-serifless
>> G-[hookless[+]|toothless]
>> I-[serifless|descending]
>> J-[descending|flat]
>> Q-[bar|crossing|detached|hook|horizontal|open|straight]

>> a-[earless|rounded|single]
>> b-rounded
>> d-[tailed|toothless]
>> f-extended
>> j-serifed
>> l-[hooky|serifless]
>> m-rounded
>> p-[eared|serifed]
>> q-hook
>> t-asymmetric[+|-[-]]
>> y-straight

>> 0-split
>> at-tall
>> paren-flat

>> ascender=<parm>
>> cap=<parm>
>> leading=<parm>
>> normal
>> quasi-[extension|proportional]
>> shape=<parm>
>> sb=<parm>
>> space=<parm>>

>> family=<name>
>> test
>> [-- <options>> *]" | usage:
	exit 1
}

# e.g. with optional glyph variants..
#        make_install iosevka kobo                                               # default kobo fonts
#        make_install iosevka kobo a-single f-extended I-serifless family=aFont  # custom e-ink font
#        make_install iosevka                                                    # default desktop fonts
#        make_install iosevka Q-bar                                              # default desktop fonts
#        make_install iosevka grotesk                                            # grotesk style desktop fonts
#        make_install iosevka elementary                                         # elementary style desktop fonts
#        make_install iosevka kobo latin+greek space=1.5000 Q-bar                # my custom e-reader fonts
#        make_install iosevka -- I-serifless family=forCoding                    # single custom font, see font/iosevka
#        make_install iosevka -- dyslexic kobo english I-serifless f-extended cap=extended family=Grotesk  # single custom ebook font with extended cap height
#
# current font preferences..
#        make_install iosevka altmono I-descending Q-straight (use Q-bar for maximum readability)
#        make_install iosevka kobo mu
#        make_install iosevka web m-rounded
#        make_install iosevka m-rounded

# export IOSEVKA=${version:-v27}
export IOSEVKA=${version:-v30}

[ $clean ] && rm -r /home/depot/fonts/Iosevka.${IOSEVKA}/.build

MAKE_INSTALL=/tmp/iosevka:make_install
# SRCDIR=$HOME/bin/functions/font
GLYPH=b-rounded
language=fluent      # default e-reader glyph set
dyslexic=true        # default e-reader dyslexic font families
emdash="emdash=2"
emkindle=1.2384      # lengthened emdash, width == 2.15*space where emdash == 1.7361*space
emkobo=1.2384
ecopy=true           # copy typeface to device folder
space="space=1.075"  # minimal dyslexxic work spacing

touch $MAKE_INSTALL
# trap "rm -f $MAKE_INSTALL; pkill -f iosevka.$IOSEVKA" EXIT INT
# shift  # remnant from prior "maka_install" call

glyph()   { unset b d p; eval $1=$2; GLYPH=$2; }

cmdopts() {
	while [ $1 ] ;do
		case $1 in
			# shapes
			ebook          ) ebook=true ;;
			kindle         ) ereader=$1 ;;
			kobo           ) ereader=$1 ;;
			koreader       ) koreader=$1 ;;
			expanded       ) expanded=$1 ;;

			# language
			cyrillic       ) language=$1 ;;
			fluent         ) language=$1 ;;
			latin+greek    ) language=$1 ;;

			# typefaces
			classic        ) classic=true ;;
			coding         ) coding=true ;;
			quad           ) quad=true ;;
			mu             ) mu=true ;;
			serifless      ) serifless=serifless ;;
			serifed        ) serifed=serifed ;;
			trio           ) trio=true ;;
			web            ) web=true ;;

			# styles
			altmono        ) altmono=$1 ;;  # alternate "monospace" coding font
			book+regular   ) adjust=$1 ;;
			grote          ) grote=$1 ;;
			open*          ) open=$1 ;;

			# glyphs
			D-serifless    ) D=$1 ;;
			G-hookless     ) G=$1 ;;
			G-hookless+    ) G=$1 ;;
			G-toothless    ) G=$1 ;;
			I-descending   ) I=$1 ;;
			I-serifless    ) I=$1 ;;        # source code variant
			J-descending   ) J=$1 ;;
			J-flat         ) J=$1 ;;
			Q-bar          ) Q=$1 ;;
			Q-crossing     ) Q=$1 ;;
			Q-detached     ) Q=$1 ;;
			Q-hook         ) Q=$1 ;;
			Q-horizontal   ) Q=$1 ;;
			Q-open         ) Q=$1 ;;
			Q-straight     ) Q=$1 ;;

			a-earless      ) a=$1 ;;
			a-rounded      ) a=$1 ;;
			a-single       ) a=$1 ;;
			b-rounded      ) glyph b $1 ;;  # unolexic
			d-tailed       ) glyph d $1 ;;  # ebook variant
			d-toothless    ) glyph d $1 ;;  # with p-eared
			f-extended     ) f=$1 ;;        # unolexic (homage to universal grotesk)
			i-serifless    ) i=$1 ;;
			j-flat         ) j=$1 ;;
			j-serifed      ) j=$1 ;;
			l-hooky        ) l=$1 ;;
			l-serifless    ) l=$1 ;;
			m-rounded      ) m=$1 ;;
			p-eared        ) glyph p $1 ;;
			p-serifed      ) glyph p $1 ;;
			q-hook         ) q=$1 ;;        # ebook variant
			t-asymmetric   ) t=$1 ;;
			t-asymmetric+  ) t=$1 ;;
			t-asymmetric-* ) t=$1 ;;
			y-straight     ) y=$1 ;;

			0-split        ) zero=$1  ;;
			1-nobase       ) one=$1   ;;
			4-open+        ) four=$1  ;;
			at-tall        ) at=$1    ;;    # source code variant
			paren-flat     ) paren=$1 ;;    # source code variant

			# geometry
			ascender=*     ) ascender="$1"  ;;
			capadjust      ) capadjust="$1" ;;
			cap=*          ) [ ${1#*=} = 'off' ] && unset cap || cap="$1" ;;
			leading=*      ) leading="$1"   ;;
			normal         ) normal=normal  ;;
			quasi-ext*     ) quasi=$1   ;;
			quasi-pro*     ) quasi=$1   ;;
			sb=*           ) sb="$1"    ;;
			shape=*        ) shape="$1" ;;
			space=*        ) space="$1" ;;

			family=*       ) [ $ereader ] && family="$1" ;;
			test           ) test=true; unset ecopy ;;
			--             ) shift; . $HOME/bin/functions/font/iosevka $@; exit ;;
			help           ) usage ;;
			*              ) usage ;;
		esac
		shift
	done
}

killall -q firefox  # release browser memory
killall -q chromium

cmdopts $@  # set commandline options

# build font suite
ifno "build iosevka.$IOSEVKA font suite" && exit

update() {
	cd $HOME/.fonts/$2
	case $(find . -regextype posix-extended -regex '.*-(normal)*regular(upright)*.ttf') in
		*normal* ) fonts='*-normalbookupright *-normalbookitalic *-normalboldupright *-normalbolditalic' ;;  # version 3x
		*        ) fonts='*-book *-bookitalic *-bold *-bolditalic' ;;  # version 1x/2x
	esac

	for z in $fonts ;do  # i is a glyph var
		# supplementary glyphs (as uncovered from ebooks)
		fforge map $z 2e22 300c  # add corner bracket punctuation
		fforge map $z 2e25 300d
		# e-reader font folders
		if [ $ecopy ] ;then
			file=$z.ttf
			FOLDER=$STOW/$ereader/fonts/$1
			mkdir -p $FOLDER
			cp -v $file $FOLDER/
		fi
	done
}

options() { echo $adjust $ascender $cap $quasi $leading $sb $shape $normal $style $D $G $I $J $L $Q $a $b $d $f $i $j $l $m $p $q $t $y $zero $at $paren $altmono $grote $open $one $four $serifless $serifed $capadjust $expanded $@; }  # list

# family [options]*
e_ink() {
	ditto e_ink "$@"
	name=$1
	shift
	iosevka.$IOSEVKA dyslexic $ereader $language q-hook $(options $@) $emdash $space family=$name
	update $GLYPH $name
}

dfont()   { iosevka.$IOSEVKA extended cap=extended G-hookless+ y-straight t-asymmetric+ 1-base 4-open+ q-hook Q-bar $(options $@) at-tall $cap; }
efont()   { iosevka.$IOSEVKA $language $(options $@); }
emdash()  { [ "$ereader" = kobo ] && emdash="emdash=$emkobo" || emdash="emdash=$emkindle"; }  # == M + space width
family()  { for i in $@ ;do case $i in family=*) echo ${i#*=}; break ;; esac ;done }

wfont()   {
	iosevka.$IOSEVKA english G-hookless+ y-straight t-asymmetric+ 4-open+ Q-bar $(options $@) i-hooky asterisk-high $emdash
	cp -fv $HOME/.fonts/$(family $@)/*ttf /srv/http/thedarnedestthing.com/application/public/fonts/
}

if [ "$classic" ] ;then
	cmdopts quasi-ext ${space:-space=M} a-double j-serifless
	emdash
	e_ink articulate  G-toothed             J-serifless Q-crossing
	e_ink typograffic G-rounded I-serifless J-flat      Q-straight f-extended

elif [ "$mu" ] ;then
	cmdopts quasi-ext ${space:-space=M} f-extended G-hookless+ J-descending Q-straight open+
	emdash
	e_ink mu     I-descending
	e_ink mudra  Y-descending
	e_ink tundra Y-descending a-single

elif [ "$test" ] ;then
	cmdopts quasi-ext ${space:-space=M} Q-straight open+ j-flat serifless serifed
 	emdash
	e_ink proof  grote   I-descending t-asymmetric-- l-ascending          f-extended J-flat T-descending

elif [ "$quad" ] ;then
	cmdopts quasi-ext ${space:-space=M} Q-straight open+
 	emdash
	e_ink stria altmono I-serifless
	e_ink grote grote   I-descending
	e_ink patio grote   a-single t-cross
	e_ink lythe grote   I-descending t-asymmetric-

elif [ "$koreader" ] ;then
	cmdopts quasi-ext ${space:-space=M} Q-straight open+ j-flat serifless serifed
 	emdash
	e_ink chalk  grote   I-serifed    t-asymmetric-- l-serifless a-single
	e_ink draft  grote   I-serifed    t-asymmetric-- l-serifless
	e_ink pencil grote   I-descending t-asymmetric-- l-ascending a-single f-extended J-flat T-descending
	e_ink proof  grote   I-descending t-asymmetric-- l-ascending          f-extended J-flat T-descending

elif [ "$serifed" ] ;then
	cmdopts quasi-ext ${space:-space=M} Q-straight open+ j-flat serifless serifed
 	emdash
	e_ink adrift grote   I-descending t-asymmetric--
	e_ink drift  grote   I-serifless  t-asymmetric--
	e_ink draft  grote   I-serifed    t-asymmetric-- l-serifless
	e_ink proof  grote   I-descending t-asymmetric-- l-serifless
	e_ink patio  grote   a-single t-cross
	e_ink stria  altmono I-serifless

elif [ "$serifless" ] ;then
	cmdopts quasi-ext ${space:-space=M} Q-straight open+ j-flat serifless
 	emdash
	e_ink grote grote   I-descending
	e_ink licht grote   I-descending t-asymmetric-
	e_ink lucid grote   I-descending t-asymmetric- i-hooky
	e_ink lathe grote   I-descending t-asymmetric- a-single

elif [ "$trio" ] ;then
	cmdopts quasi-ext ${space:-space=M} G-hookless+ Q-straight open+
	emdash
	e_ink stria
	e_ink groot I-descending
	e_ink graal I-descending a-single

elif [ $family ] ;then                    # custom e-ink font (non-published)
	e_ink ${family#*=}

elif [ $web ] ;then                       # www fonts
	unset cap; emdash; cmdopts t-asymmetric--
	wfont heading  quasi-ext           space=1.100 webfont family=wMonolegible serifless serifed
	wfont dyslexic quasi-ext           space=1     webfont family=wMonolexic   serifless serifed I-descending t-asymmetric-- l-ascending f-extended J-flat T-descending
	wfont dyslexic quasi-ext I-serifed space=1.125 webfont family=wCaps
	wfont expanded quasi-pro I-serifed space=1     webfont family=wQuasilexic sb=1 l-serifless

elif [ $coding ] ;then                    # classic coding font
	unset space
	cmdopts cap=extended
	dfont $leading G-toothed a-double family=monodyslexic

else                                      # desktop fonts
	unset space
	cmdopts t-asymmetric-- j-flat 1-nobase
	dfont $leading
	dfont proof    I-descending l-ascending f-extended J-flat T-descending
	dfont menu     I-serifed    Q-straight
	dfont dyslexic I-serifed    Q-straight      space=2.2   family=qclocktwo                      # conky qclocktwo font
	dfont dyslexic I-serifed    quasi-extension space=1.125 family=monograffic serifless serifed  # panel/dunst font

	cmdopts quasi-ext open+ j-flat serifless serifed capadjust
 	emdash
	e_ink charcoal grote space=1 I-descending t-asymmetric-- l-ascending f-extended J-flat T-descending Q-bar
fi

# kak: filetype=sh
