#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Font
# ══════════════════════════════════════════════════════════════════════════════

# .................................................................... nerd-font

# Usage: nerdfont [--mono] [family]
#
# HISTORY: Iosevka directory and file (naming conventions) changed with version 3x

nerdfonts='--fontawesome --fontawesomeext --octicons --material'  # powerline added below

NAMELIMIT=222  # arbitrarily long name limt

# see make_install iosevka
NERD=/home/depot/nerd-fonts
MAKE_NERD=/tmp/iosevka:nerdfont

[ $1 = '--mono' ] && { mono=$1; shift; }
FONT=$HOME/.fonts/${1:-iosevka}
family=${FONT##*/}

# install nerd-font patcher
ditto warning 'nerd-fonts v2.x may break ligatures'
if exists --repo ${NERD##*/} ;then
	cd $NERD
	$NERD/font-patcher --version
	# if [ ! -e $MAKE_NERD ] ;then
	# 	$NERD/font-patcher --version
	# 	ifno 'sync nerd-fonts repo' || git pull  # full repo is over 30GB
	# 	touch $MAKE_NERD
	# fi
else
	void && xb_check fontforge nodejs otfcc ttfautohint
	cd ${NERD%/*}
	git clone --depth 1 https://github.com/ryanoasis/nerd-fonts.git
	$NERD/font-patcher --version
	# BUG: 31 character name limit
	sed -i "s/limit = 31 /limit = $NAMELIMIT /; s/checklen(31, /checklen(${NAMELIMIT}, /" $(find $NERD -name 'FontnameParser.py')
fi

[ -e $MAKE_NERD ] && { [ -e /tmp/${FONT##*/} ] && { ifyes "replace $FONT" || exit; }; }
mv -f $FONT /tmp/${FONT##*/} 2>/dev/null
mkdir -p $FONT
cd ${NERD%/*}/Iosevka.$IOSEVKA
cp -v $(find dist/$family -maxdepth 1 -type d -iregex '.*/ttf')/* $FONT

# restore font family name (prior to NerdFont injection)
nerdless() {
	rm -f *.ttx
	font=*.ttf

	# dump to ttx
	ditto ttx $font
	ttx -q $font
	rm -f *.ttf

	# strip NerdFont naming extensions
	sed -i -r '/NerdFont.*[0-9]$/s/NerdFont.* / Regular /; s/(NFM)*NerdFont.*//' ${font%.ttf}.ttx
	# HACK: for menu and proof fonts
	sed -i 's/IosevkaMenu/Iosevka-menu/; s/IosevkaProof/Iosevka-proof/' ${font%.ttf}.ttx

	# generate new ttf
	ditto ttf ${font%.ttf}.ttx
	ttx -q ${font%.ttf}.ttx

	# rm -f *.ttx
}

# patch font
REGULAR=$(find dist/$family -regextype posix-extended -iregex '.*/ttf/.*-(normal)*regular(upright)*.ttf')
if [ -e $NERD/font-patcher ] ;then
	rm -f /tmp/*ttf  # nerd-font creates file by font family name (note case)
	$NERD/font-patcher --adjust-line-height $mono --powerline -out /tmp $REGULAR
	mv -v /tmp/*ttf $REGULAR
	$NERD/font-patcher $mono $nerdfonts -out /tmp $REGULAR

	cd /tmp
	nerdless  # restore font name (remove NerdFont naming extensions)
	cd -
	mv -v /tmp/*ttf $REGULAR
fi

fc-cache -fv >/dev/null

# kak: filetype=sh
