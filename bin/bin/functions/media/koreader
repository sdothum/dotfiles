#!/usr/bin/bash
# sdothum - 2016 (c) wtfpl

# Media
# ══════════════════════════════════════════════════════════════════════════════

# ....................................................... KOReader metadata edit

usage() { usage: "$(basename $0) [clearPages] [t'op | b'ottom <margin>] [l'ineSpacing <percent>] [s'yncMargins 0|1] [f'ont | h'eaderFont <font>] [font g'amma <gamma>]"; exit 1; }

# update sdr files to match ever changing default settings :)

number() {
	[[ "$1" =~ ^[0-9]+$ ]] || return 1
	echo $1
}

binary() {
	[[ "$1" =~ ^[01]$ ]] || return 1
	echo $1
}

string() {
	[[ "$1" =~ ^[A-Za-z0-9]+$ ]] || return 1
	echo $1
}

sdr()      { ifno "$1 .. $2" && skip=true || sudo find -regex '.*metadata.epub.lua' -exec sed -i "$2" {} \; ; }
gestures() { ditto gestures "$1"; sed -i "$2" ../.adds/koreader/settings/gestures.lua; }
settings() { ditto settings "$1"; sed -i "$2" ../.adds/koreader/settings.reader.lua; }

clearpages() { sdr 'clearpages' '/\"doc_pages\"/d; /\"pages\"/d'; }  # force page count refresh

[ $1 ] || usage

while [ $1 ] ;do
	unset skip
	case $1 in
		c*   ) clearpages; shift; continue ;;
		t*   ) margin=$(number $2)  && sdr 'topmargin' '/\"copt_t_page_margin\"/s/= [0-9]*,/= '${margin}',/'    || usage ;;
		b*   ) margin=$(number $2)  && sdr 'bottommargin' '/\"copt_b_page_margin\"/s/= [0-9]*,/= '${margin}',/' || usage ;;
		l*   ) percent=$(number $2) && sdr 'linespacing' '/\"copt_line_spacing\"/s/= [0-9]*,/= '${percent}',/'  || usage; clearpages=true ;;
		s*   ) sync=$(binary $2)    && sdr 'syncmargins' '/\"copt_sync_t_b_page_margins\"/s/[01]/'${sync}'/'    || usage ;;
		f*   ) font=$(string $2)    && sdr 'font' '/\"font_face\"/s/\"[^ ]*\",/\"'${font}'\",/'                 || usage; clearpages=true ;;
		h*   ) font=$(string $2)    && sdr 'headerfont' '/\"header_font_face\"/s/\"[^ ]*\",/\"'${font}'\",/'    || usage ;;
		g*   ) gamma=$(number $2)   && sdr 'fontgamma' '/\"copt_font_gamma\"/s/= [0-9]*,/= '${gamma}',/'        || usage ;;
		*    ) usage ;;
	esac
	[ $skip ] && { shift 2; continue; }
	case $1 in
		t*   ) margin=$(number $2)  && settings 'topmargin' '/\"copt_t_page_margin\"/s/= [0-9]*,/= '${margin}',/'    ;;
		b*   ) margin=$(number $2)  && settings 'bottommargin' '/\"copt_b_page_margin\"/s/= [0-9]*,/= '${margin}',/' ;;
		l*   ) percent=$(number $2) && settings 'linespacing' '/\"copt_line_spacing\"/s/= [0-9]*,/= '${percent}',/'  ;;
		h*   ) font=$(string $2)    && settings 'font' '/\"cre_font\"/s/\"[^ ]*\",/\"'${font}'\",/'                  ;;
		g*   ) gamma=$(number $2)   && settings 'fontgamma' '/\"copt_font_gamma\"/s/= [0-9]*,/= '${gamma}',/'        ;;
		*    ) usage ;;
	esac
	case $1 in
		t*   ) margin=$(number $2)  && gestures 'topmargin' '/\"t_page_margin\"/s/= [0-9]*,/= '${margin}',/'    ;;
		b*   ) margin=$(number $2)  && gestures 'bottommargin' '/\"b_page_margin\"/s/= [0-9]*,/= '${margin}',/' ;;
		l*   ) percent=$(number $2) && gestures 'linespacing' '/\"line_spacing\"/s/= [0-9]*,/= '${percent}',/'  ;;
		f*   ) font=$(string $2)    && gestures 'font' '/\"set_font\"/s/\"[^ ]*\",/\"'${font}'\",/'             ;;
		g*   ) gamma=$(number $2)   && gestures 'fontgamma' '/\"font_gamma\"/s/= [0-9]*,/= '${gamma}',/'        ;;
		*    ) usage ;;
	esac
	shift 2
done

[ $clearpages ] && clearpages

# kak: filetype=sh
