#!/usr/bin/bash
# sdothum - 2016 (c) wtfpl

# Media
# ══════════════════════════════════════════════════════════════════════════════

# ................................................................. FLAC editing

usage() { echo "$(basename $0) [ls | rm <tag>* | import | export | untitled]
> [-d] tracknumber <from>, increment all tracks starting <from>
> [-d] [<name.flac> | <track>] set <tag>=<value>
> [-d] [<name.flac> | <track>] [album | date | discnumber | title] <string> | /<regex>
> [-d] [<name.flac> | <track>] [[album]artist[+] | genre[+]] <string>*
>              where, <track>  -> ## of flac filename
>                     /<regex> -> (sed s) [//match/s]/from/to/[<flag>*]
>                     /Case    -> s/\\\b(.)/\u\\\1/g  (Proper Case All Words)
>                     -d or \$debug envar to list set-tag only
>                     -q for no confirmation prompt" | usage:pipe
	exit 1
}

METAFLAC=/usr/bin/metaflac
TAGS='@(album|albumartist|artist|date|discnumber|genre|title|tracknumber)'  # extglob pattern list

while [ $1 ] ;do
	case $1 in
		-d ) debug=true ;;
		-q ) quiet=true ;;
		*  ) break      ;;
	esac
	shift
done

IFS=$(echo)  # to handle filename spaces
while [ $1 ] ;do
	case $1 in
		*.flac ) file="$(find ./ -name "${1}")"; [ "$file" ] || usage ;;
		[0-9]* ) file="$(find ./ -maxdepth 1 -name "${1}*.flac")"; [ "$file" ] || usage ;;
		*      ) file='*.flac'; break ;;
	esac
	shift
	break
done

confirm()  { [ $debug ] || [ $quiet ] || { ifno 'apply changes' && usage; } }
metadata() { for f in *flac; do [ "$f" = '*flac' ] && usage; ditto track "$f"; $METAFLAC --export-tags-to=- "$f"; [ $1 ] && exit; done; }
tagcheck() { for i in $@; do metadata | grep -iq "^$i=" && ditto tag "$i" || { ditto CRITICAL tag "$i"; rcode=1; } ;done; return ${rcode:-0}; }
titles()   { metadata | grep '^TITLE='; }

shopt -s extglob  # SEE: $TAGS
case $1 in
	''          ) quiet=true; set -- 'ls' ;;
	ls | LS     ) quiet=true; noupdate=true ;;
	rm          ) tagcheck ${@:2} || usage ;;
	set         ) echo "$2" | grep -q '[^ ]=[^ ]' || usage ;;
	import      ) ;;
	export      ) ;;
	untitled    ) ;;
	*artist+    ) add=true ;;  # for additional artist album references in ncmpcpp
	genre+      ) add=true ;;
	title       ) [ "$file" = '*flac' ] && { [ "${2}" = "/${2#?}" ] || usage; } ;;
	tracknumber ) TRACK=$(token number $2) || usage ;;  # TRACK unset otherwise SEE: metaflac()
	$TAGS       ) ;;
	*           ) usage ;;
esac
shopt -u extglob

settag() {
	TAG=$(echo $1 | tr '[:lower:]' '[:upper:]')
	if [ $debug ] ;then
		echo $METAFLAC --set-tag=$TAG="$2" "$f"
	else
		[ $add ] || $METAFLAC --remove-tag=$TAG "$f"  # or replace
		$METAFLAC --set-tag=$TAG="$2" "$f"
	fi
	ditto="ditto $TAG \"$2\""
}

regextag() {
	echo | sed -r "$2" >/dev/null 2>&1 || { ditto syntax "sed "$2""; exit; }  # sed sanity check
	if [ $debug ] ;then
		# $METAFLAC --show-tag=$1 "$f"
		ditto $1 "$($METAFLAC --show-tag=$1 "$f" | cut -d= --complement -f1)"
		ditto regex= "$($METAFLAC --show-tag=$1 "$f" | cut -d= --complement -f1 | sed -r "$2")"
	fi
	tag=$($METAFLAC --show-tag=$1 "$f" | cut -d= --complement -f1 | sed -r "$2")  # NOTE: --complement for LAST field :)
	settag $1 "$tag"
}

metaflac() {
	confirm
	for f in $file ;do
		${1}tag "$2" "${TRACK:-$3}"
		[ $TRACK ] && (( TRACK++ ))  # tracknumbers must increment
		[ $TRACK ] || [ $2 = TITLE ] && eval $ditto
	done
	[ $TRACK ] || [ $2 = TITLE ] || eval $ditto
	unset file
}

export() {
	[ "$track" ] || return
	TRACK="$tracknumber - $artist - $title.flac"
	mv "$track" "$TRACK"
	sed -i "s/$track/$TRACK/" *.m3u
}

case $1 in
	ls       ) metadata    | pager; [ $noupdate ] && exit ;;  # skip mpc update
	LS       ) metadata LS | pager; [ $noupdate ] && exit ;;

	rm       )
		while [ "$2" ] ;do
			ditto tag "remove $2"
			confirm
			for f in *flac; do $METAFLAC --remove-tag="$2" "$f" ;done
			shift
		done
		;;

	# set tag across tracks
	set      )
		ditto tag "set $2"
		confirm
		for f in $file ;do settag ${2%%=*} ${2##*=} ;done
		;;

	# sync track names to titles
	export   )
		ls -1 *.flac
		echo '---'
		titles
		ditto file 'sync to metadata titles'
		confirm
		# cannot ".. | while" BECAUSE: spawned subshell localizes vars in "do" block
		while read line <&3 ;do
			[ "${line#@track }"       != "$line" ] && { export ; track="${line#@track }"; }
			[ "${line#ARTIST=}"       != "$line" ] && artist="${line#ARTIST=}"
			[ "${line#TITLE=}"        != "$line" ] && title="${line#TITLE=}"
			[ "${line#TRACKNUMBER=}"  != "$line" ] && tracknumber=$(printf "%02d" "${line#TRACKNUMBER=}")
		done 3< <(metadata | nocolor | grep -E '^(@track |ARTIST=|TITLE=|TRACKNUMBER=)')  # process substitition
		export  # last track
		ls -1
		;;

	# sync titles to track names
	import   )
		ls -1 *.flac
		echo '---'
		titles
		ditto title 'sync to filenames'
		confirm

		for file in *flac ;do
			settag TRACKNUMBER "$(echo $f | cut -d' ' -f1)"
			settag TITLE "$(echo $f | sed 's/^[0-9. ]*//; s/.flac//')"
		done
		titles
		;;

	# replace untitled track names
	untitled )
		ls -1 *.flac
		echo '---'
		untitled="$(metadata | grep '^ALBUM=' | head -1 | cut -d= -f2)"
		titles
		ditto title 'generate numbered album tracks'
		confirm

		for file in *flac ;do
			track="$(echo $f | cut -d' ' -f1)"
			settag TRACKNUMBER "$track"
			settag TITLE "$untitled ${track#0}"
		done
		titles
		;;

	*        )
		TAG=$(echo ${1%+} | tr '[:lower:]' '[:upper:]')
		shift
		for i ;do  # iterate over $@ options which may contain spaces
			case "$i" in
				''          ) usage ;;
				//*/s/*/*/* ) metaflac regex "$TAG" "${i#?}";;  # /match/ search and replace
				/*/*/*      ) metaflac regex "$TAG" "s$i"   ;;  # search and replace
				/Case       ) metaflac regex "$TAG" "s/.*/\L&/; s/\b(.)/\u\1/g" ;;
				/*          ) usage ;;
				*           ) metaflac set "$TAG" "$i";;
			esac
			shift
			add=true  # for artist & genre list
		done
		;;
esac

# # echo '---'
mpc update >/dev/null

# kak: filetype=sh
