#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Media
# ══════════════════════════════════════════════════════════════════════════════

# ................................................................. Media player

# Usage: play <url> | [-q] <path> [<title>]
#
# Note: <path> may be a media file or folder containing such

fontsize=36
ext='avi|Avi|divx|Divx|m4v|M4v|mkv|Mkv|mp4|Mp4|wmv|Wmv'
delay=1.35  # for "next" xdotool key sequence

pgrep -f 'menu series' && next='next\n'

YOUTUBE=/net/downloads/http/youtube-dl
# cleanup accidental screenshots and youtube-dl
trap "rm -f $HOME/mpv-shot*.jpg" EXIT

[ "$1" = '-q' ] && { quiet=true; shift; }
# play media (see rox, menu movies, menu series, browsers..)
[ "$2" ] && title=$2 || title=${1##*/}

# check for attached usb drive
if [ -z $STREAM ] ;then
	[ -d "$1" ] && path=$1 || path=${1%/*}
	# attached usb drive?
	libext=$(find /run/media/$USER -maxdepth 3 -type d -name "$(basename $(dirname "$path"))" 2>/dev/null)
	if [ -n "$libext" ] ;then
		STREAM=$(find "$libext" -maxdepth 1 -type d -name "${path##*/}")
		STREAM=$(find "$STREAM" -regextype posix-extended -regex ".*($ext)" | grep -v sample)
	else
		STREAM=$1
	fi
fi

videomode on

while : ;do
	mpv --vf=eq "$STREAM" --sub-font-size=$fontsize >/dev/null 2>&1 &
	# zoom window after window focus delay
	xdotool search --sync --class mpv key Super+Shift+z
	notify 30 blackboard "$title" "$(printf '1/2^Contrast\n3/4^Brightness\n5/6^Gamma\n7/8^Saturation\n9/0^Volume^m^Mute\n-/+^Audio Delay^ #^Language\nj/J^Subtitles^ v^Toggle\nx/z^Subtitle Delay' | column -s^ -t)"
	xdotool search --sync --class Dunst windowraise
	pwait "mpv --vf=eq"

	echo "$1" | grep -q http && break
	[ $quiet ] && break
	# only purges server files (arm redirected usb files remain untouched)
	action=$(echo "${next}quit\nskip\nreplay\ndelete\npulse\nsonarr" | rmenu "$title" -no-custom)
	case $action in
		delete )
			[ "$(echo 'no\nyes' | rmenu "Delete $title" -no-custom)" = yes ] || break
			mhistory play:delete "$title $1"
			rm -rf "$1"
			break ;;
	
		next   )
			(sleep $delay; xdotool key Down; xdotool key Return;) &  # key presses for episodes menu
			break ;;

		quit   ) pkill -f 'menu'; blackboard; videomode off; exit ;;  # restore dynamic windows
		replay ) continue ;;  # pulse; continue ;;
		pulse  ) pulse ;;
		sonarr ) sonarr $STREAM; break ;;
		*      ) break ;;
	esac
done

videomode off

# vim: set ft=sh: #
