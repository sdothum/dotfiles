#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Edit
# ══════════════════════════════════════════════════════════════════════════════

# ....................................................................... Editor

usage() { usage: "[kmd=<command>] $(basename $0) [-l | -p [<id>] | -v | -h] [-BENCHMARK | -DEBUG | -PLUG | -TRACE | -X11 | RULER=<char> | -- | ID=<id>] [WAIT] [<row>x<col>] <file>*"; exit 1; }

# NOTE: $kmd is passed passively to (env) term for subsequent "xdotool type"

headless=${headless:-false}
echo $1 | grep -q '.*/yazi.*/bulk-.*' && attached=true  # FOR: yazi bulk renames

# share all instances (clients) with a single kak server session
ID=${ID:-$USER}  # default session id
KAK=/usr/bin/kak
[ -e /usr/local/bin/kak ] && KAK=/usr/local/bin/kak

CONF=$XDG_CONFIG_HOME/kak
DICTIONARY=$HOME/.config/kak-lsp/kak-lsp:dictionary
TOML=$HOME/.config/kak-lsp/kak-lsp.toml  # NOTE: for kak-lsp v17.2.1
LOG=/tmp/kak.log
DELAY=0.25        # tuned time to center window
export TABSTOP=3  # default for (pipe), SEE: align
[ -e $SESSION/kak:ruler ] && export RULER=$(cat $SESSION/kak:ruler)

$KAK -l | grep -q dead | $KAK -clear  # dead sessions
sudo chmod 666 $LOG                   # in case first time creation by root

while : ;do
	case $1 in
		-l            ) $KAK -l; exit ;;
		-p            ) [ $2 ] && $KAK -p $2 || { for i in $($KAK -l); do ditto kak "$i ${RED}❌"; echo kill | $KAK -p $i ;done }; exit ;;
		-v*           ) $KAK -version; exit ;;
		-h*           ) $KAK -help; ditto '-debug' "hooks | shell | profile | keys | commands"; ditto 'kak' "-l | -p [<id>] | -v | -DEBUG (commands) | -P (no plugins) | -X (non-modal colorscheme)"; usage ;;
		-B*           ) hyperfine -warmup 10 "$KAK -ui dummy -e quit"; exit ;;
		-D*           ) export TRACE=/tmp/kak:trace; debug='-debug commands' ;;  # debug trace
		-P*           ) export UNPLUG=true ;;           # kakrc plugins exclusions
		-T*           ) export TRACE=/tmp/kak:trace ;;  # trace messages
		-X*           ) unset DISPLAY; [ $YAZI ] || export COLORSCHEME=${COLORSCHEME:-dabruin} ;;
		RULER=*       ) export RULER="${1#*=}" ;;       # default RULER='│'
		--            ) ID=$(rand)    ;;                # force new instance
		id=*          ) ID="${1#*=}"  ;;
		ID=*          ) ID="${1#*=}"  ;;
		WAIT          ) WAIT=$1 ;;
		*[0-9]x[0-9]* ) XY=$1   ;;
		*             ) break   ;;
	esac
	shift
done

# snapshot sources (in lieu of persistent undo avalability)
console || hgadd $@ &  # don' wait :)

# inject spelling dictionary manually into ltex configuration in lieu of unavailable (helix) ltex-ls dictionary update
cat $TOML:zk $TOML:add >$TOML:template
if [ -e $DICTIONARY ] ;then
	spelling="$(sort -df $DICTIONARY | sed -r '/^ *$/d; s/^ *(.*) *$/\\"\1\\":/' | tr '\n' ':')"  # comma's cause unterminated address regex error
	sed "/^dictionary/a${spelling%::}" $TOML:template | sed "/^dictionary/{n;s/::/,\n/g}" >$TOML
fi

# escape filenames containing spaces
count=0
for i in $@ ;do
	grep -q '^#.*filetype=sh' "$i"         && ID=script
	echo "$i" | grep -Eq '(^kakrc|\.kak)$' && ID=kakoune
	file="$file $(echo $i | sed 's/ /\\ /g')"
	count=$(( count + 1 ))
done
[ $count -gt 1 ] && notify low 'Kakoune' "$count files to edit"

# client/server
if $headless ;then
	$KAK -l | grep -q $ID || setsid $KAK -d -s $ID &
else
	$KAK -l | grep -q $ID || session='-s'
fi

# term call doesn't handle "space" names
# console && { $KAK $file >>$LOG 2>&1; exit; }
console || [ $attached ] && exec $KAK $file  # nvidia tty console doesn't play well with full default kak config

# (sleep $DELAY; window snap center) &  # SEE: rulerrc
title=$(echo "$file" | sed 's|\.\/||g; s| [^ ]*/||; s/ .*/.../g')
[ $count -gt 1 ] && title="$title($count)"
# NOTE: nohup to detach window from yazi
nohup term "title=kak:$title" class=${class:-kak} PAPER ${XY:-132x52} $WAIT $KAK $debug ${session:--c} $ID "$file" >>$LOG 2>&1  # 50 line page

# kak: filetype=sh
