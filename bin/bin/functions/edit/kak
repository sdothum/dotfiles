#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Edit
# ══════════════════════════════════════════════════════════════════════════════

# ....................................................................... Editor

# Usage: [name=<title>] kak [NEW] [WAIT] [<row>x<col>] <file>*

# share all instances (clients) with a single kak server session
[ -e /usr/local/bin/kak ] && KAK=/usr/local/bin/kak || KAK=/usr/bin/kak
unset SESSION  # unset SESSION reference to HOME subfolder
[ -z "$($KAK -l)" ] || SESSION="-c $($KAK -l | tail -1)"

CONF=$XDG_CONFIG_HOME/kak
DICTIONARY=$HOME/.config/kak-lsp/kak-lsp:dictionary
TOML=$HOME/.config/kak-lsp/kak-lsp.toml
export TABSTOP=3  # default for (pipe), see align

while : ;do
	case $1 in
		NEW           ) unset SESSION ;;  # WHY: avoid filetype (soft) wrap -width changes
		WAIT          ) WAIT=$1 ;;
		*[0-9]x[0-9]* ) XY=$1 ;;
		*             ) break ;;
	esac
	shift
done

# snapshot sources (in lieu of persistent undo avalability)
hgadd $@ &  # don' wait :)

# inject spelling dictionary manually into ltex configuration in lieu of unavailable (helix) ltex-ls dictionary update
cat $TOML:un-marksman $TOML:add >$TOML:template
if [ -e $DICTIONARY ] ;then
	spelling="$(sort -df $DICTIONARY | sed -r '/^ *$/d; s/^ *(.*) *$/\\"\1\\":/' | tr '\n' ':')"  # comma's cause unterminated address regex error
	sed "/^dictionary/a${spelling%::}" $TOML:template | sed "/^dictionary/{n;s/::/,\n/g}" >$TOML
fi

# escape filenames containing spaces
count=0
for i in $@ ;do
	file="$file $(escape $i)"
	count=$(( $count + 1 ))
done
[ $count -gt 1 ] && notify low 'Kakoune' "$count files to edit"

# term call doesn't handle "space" names
term ${name:-kak} PAPER ${XY:-132x52} $WAIT $KAK $SESSION $file  # 50 line page

# vim: set ft=sh: #
