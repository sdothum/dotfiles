#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Edit
# ══════════════════════════════════════════════════════════════════════════════

# ....................................................................... Editor

# Usage: [name=<title>] kak [-l | -p [<id>] | -h] [-- | ID=<id>] [WAIT] [<row>x<col>] <file>*

headless=${headless:-false}

# share all instances (clients) with a single kak server session
ID=$USER  # default session id
KAK=/usr/bin/kak
# [ -e /usr/local/bin/kak ] && KAK=/usr/local/bin/kak

CONF=$XDG_CONFIG_HOME/kak
DICTIONARY=$HOME/.config/kak-lsp/kak-lsp:dictionary
TOML=$HOME/.config/kak-lsp/kak-lsp.toml
LOG=/tmp/kak.log
DELAY=0.25        # tuned time to center window
export TABSTOP=3  # default for (pipe), see align

$KAK -l | grep -q dead | $KAK -clear  # dead sessions

while : ;do
	case $1 in
		-l            ) $KAK -l; exit    ;;
		-p            ) [ $2 ] && $KAK -p $2 || { for i in $($KAK -l); do ditto kak "$i ${RED}❌"; echo kill | $KAK -p $i ;done }; exit ;;
		-h*           ) $KAK -help; ditto '-debug' "hooks | shell | profile | keys | commands"; exit ;;
		--            ) ID=$(rand)   ;;  # force new instance
		id=*          ) ID="${1#*=}" ;;
		ID=*          ) ID="${1#*=}" ;;
		WAIT          ) WAIT=$1 ;;
		*[0-9]x[0-9]* ) XY=$1   ;;
		*             ) break   ;;
	esac
	shift
done

if $headless ;then
	$KAK -l | grep $ID || setsid $KAK -d -s $ID &
else
	$KAK -l | grep -q $ID || session='-s'
fi

# snapshot sources (in lieu of persistent undo avalability)
hgadd $@ &  # don' wait :)

# inject spelling dictionary manually into ltex configuration in lieu of unavailable (helix) ltex-ls dictionary update
cat $TOML:un-marksman $TOML:add >$TOML:template
if [ -e $DICTIONARY ] ;then
	spelling="$(sort -df $DICTIONARY | sed -r '/^ *$/d; s/^ *(.*) *$/\\"\1\\":/' | tr '\n' ':')"  # comma's cause unterminated address regex error
	sed "/^dictionary/a${spelling%::}" $TOML:template | sed "/^dictionary/{n;s/::/,\n/g}" >$TOML
fi

# escape filenames containing spaces
count=0
for i in $@ ;do
	file="$file $(escape $i)"
	count=$(( $count + 1 ))
done
[ $count -gt 1 ] && notify low 'Kakoune' "$count files to edit"

# term call doesn't handle "space" names
# console && { $KAK $file >>$LOG 2>&1; exit; }
console && exec $KAK $file

(sleep $DELAY; window snap center) &  # potential WAIT
term ${name:-kak} PAPER ${XY:-132x52} $WAIT $KAK ${session:--c} $ID $file >>$LOG 2>&1  # 50 line page

# kak: filetype=sh
