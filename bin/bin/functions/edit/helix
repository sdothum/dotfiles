#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Edit
# ══════════════════════════════════════════════════════════════════════════════

# ....................................................................... Editor

# Usage: [name=<title>] helix [WAIT] <file>*

CONF=$XDG_CONFIG_HOME/helix
CONFIG=$CONF/config.toml
LANGUAGES=$CONF/languages.toml
SCRATCH=/tmp/helix:scratch
# LOGGING=-v      # :log-open level upto -vvv
export TABSTOP=3  # default for (pipe), see align

[ "$1" = WAIT ] && { WAIT=$1; shift; }  # foreground process?
[ "$1" ] || { touch $SCRATCH; set -- $SCRATCH; }
[ -e "$1" ] || { notify critical 'Helix' "<b>$1</b> not found"; exit 1; }

# snapshot sources (in lieu of persistent undo avalability)
hgadd $@ &  # don' wait :)

languages() { echo ${LANGUAGES%.toml}:$1.toml; }

# inject spelling dictionary manually into ltex configuration in lieu of unavailable (helix) ltex-ls dictionary update
if [ -e $(languages spelling) ] ;then
	spelling="$(sort -df $(languages spelling) | sed -r 's/^ *(.*) *$/\\"\1\\":/' | tr '\n' ':')"  # comma's cause unterminated address regex error
	sed "/ltex.dictionary/a${spelling%::}" $(languages template) | sed "/ltex.dictionary/{n;s/::/,\n/g}" >$LANGUAGES
fi

[ $# -eq 1 ] && { cd $(dirname $1) >/dev/null; file=$(basename $1); shift; }  # enable :open in file directory

# escape filenames containing spaces
count=0
[ "$file" ] || while : ;do
	file="$file $(escape $1)"
	count=$(( $count + 1 ))
	shift
	[ $# -gt 0 ] || break
done
[ $count -gt 1 ] && notify low 'Helix' "$count files to edit"

# term call doesn't handle "space" names
term ${name:-helix} PAPER 132x53 $WAIT ${HX:-hx} -c $CONFIG $LOGGING $file  # 50 line page

# vim: set ft=sh: #
