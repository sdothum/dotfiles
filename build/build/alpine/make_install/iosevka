#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Make
# ══════════════════════════════════════════════════════════════════════════════

# ...................................................................... iosevka

ditto "major refactoring untested !!"

usage() { 
	echo "$(basename $0) . iosevka ebook | kindle | kobo
>> cyrillic | fluent | latin+greek
>> classic | coding | duet | mu | trio | web
>> altmono | book+regular | grote | open[+] 

>> D-serifless
>> G-[hookless[+]|toothless]
>> I-[serifless|descending]
>> J-[descending|flat]
>> Q-[bar|crossing|detached|hook|horizontal|open|straight]

>> a-[earless|rounded|single]
>> b-rounded
>> d-[tailed|toothless]
>> f-extended
>> j-serifed
>> l-[hooky|serifless]
>> m-rounded
>> p-[eared|serifed]
>> q-hook
>> t-asymmetric[+]
>> y-straight

>> 0-split
>> at-tall
>> paren-flat 

>> ascender <parm>
>> cap <parm>
>> leading <parm>
>> quasi-[extension|proportional]
>> sb <parm> 
>> space <parm>> 

>> family <name>
>> nocopy
>> [-- <options>> *]" | usage:
	exit 1
}

# e.g. with optional glyph variants..
#        make_install iosevka kobo                                               # default kobo fonts
#        make_install iosevka kobo a-single f-extended I-serifless family aFont  # custom e-ink font
#        make_install iosevka                                                    # default desktop fonts
#        make_install iosevka Q-bar                                              # default desktop fonts
#        make_install iosevka grotesk                                            # grotesk style desktop fonts
#        make_install iosevka elementary                                         # elementary style desktop fonts
#        make_install iosevka kobo latin+greek space 1.5000 Q-bar                # my custom e-reader fonts
#        make_install iosevka -- I-serifless family forCoding                    # single custom font, see font/iosevka
#        make_install iosevka -- dyslexic kobo english I-serifless f-extended cap extended family Grotesk  # single custom ebook font with extended cap height
#
# current font preferences..
#        make_install iosevka altmono I-descending Q-straight (use Q-bar for maximum readability)
#        make_install iosevka kobo mu
#        make_install iosevka web m-rounded
#        make_install iosevka m-rounded

[ $clean ] && rm -r /net/depot/Iosevka/.build

MAKE_INSTALL=/tmp/iosevka:make_install
# SRCDIR=$HOME/bin/functions/font
GLYPH=b-rounded
language=fluent  # default e-reader glyph set
dyslexic=true    # default e-reader dyslexic font families
emdash=2
emkindle=1.2384  # lengthened emdash, width == 2.15*space where emdash == 1.7361*space
emkobo=1.2384
ecopy=true       # copy typeface to device folder

touch $MAKE_INSTALL
trap "rm -f $MAKE_INSTALL; pkill -f iosevka" EXIT INT
shift

glyph()   { unset b d p; eval $1=$2; GLYPH=$2; }

cmdopts() {
	while [ $1 ] ;do
		case $1 in
			# shapes
			ebook        ) ebook=true ;;
			kindle       ) ereader=$1 ;;
			kobo         ) ereader=$1 ;;

			# language
			cyrillic     ) language=$1 ;;
			fluent       ) language=$1 ;;
			latin+greek  ) language=$1 ;;

			# typefaces
			classic      ) classic=true ;;
			coding       ) coding=true ;;
			duet         ) duet=true ;;
			mu           ) mu=true ;;
			trio         ) trio=true ;;
			web          ) web=true ;;

			# styles
			altmono      ) cmdopts t-asymmetric G-hookless+ J-flat ;;  # alternate "monospace" coding font
			book+regular ) adjust=$1 ;;
			grote        ) cmdopts altmono l-serifless t-asymmetric+ y-straight 4-open+ ;;
			open         ) open=$1 ;;
			open+        ) cmdopts open 4-open+ ;;

			# glyphs
			D-serifless  ) D=$1 ;;
			G-hookless   ) G=$1 ;;
			G-hookless+  ) G=$1 ;;
			G-toothless  ) G=$1 ;;
			I-descending ) I=$1 ;;
			I-serifless  ) I=$1 ;;        # source code variant
			J-descending ) J=$1 ;;
			J-flat       ) J=$1 ;;
			Q-bar        ) Q=$1 ;;
			Q-crossing   ) Q=$1 ;;
			Q-detached   ) Q=$1 ;;
			Q-hook       ) Q=$1 ;;
			Q-horizontal ) Q=$1 ;;
			Q-open       ) Q=$1 ;;
			Q-straight   ) Q=$1 ;;

			a-earless    ) a=$1 ;;
			a-rounded    ) a=$1 ;;
			a-single     ) a=$1 ;;
			b-rounded    ) glyph b $1 ;;  # unolexic
			d-tailed     ) glyph d $1 ;;  # ebook variant
			d-toothless  ) glyph d $1 ;;  # with p-eared
			f-extended   ) f=$1 ;;        # unolexic (homage to universal grotesk)
			j-serifed    ) j=$1 ;;
			l-hooky      ) l=$1 ;;
			l-serifless  ) l=$1 ;;
			m-rounded    ) m=$1 ;;
			p-eared      ) glyph p $1 ;;
			p-serifed    ) glyph p $1 ;;
			q-hook       ) q=$1 ;;        # ebook variant
			t-asymmetric ) t=$1 ;;
			t-asymmetric+) t=$1 ;;
			y-straight   ) y=$1 ;;

			0-split      ) zero=$1 ;;
			4-open+      ) four=$1 ;;
			at-tall      ) at=$1 ;;       # source code variant
			paren-flat   ) paren=$1 ;;    # source code variant
			
			# geometry
			ascender     ) [ $2 ] && { ascender="$1 $2"; shift; } || usage ;;
			cap          ) [ $2 ] && { [ $2 = 'off' ] && unset cap || cap="$1 $2"; shift; } || usage ;;
			leading      ) [ $2 ] && { leading="$1 $2"; shift; } || usage ;;
			quasi-ext*   ) quasi=$1 ;;
			quasi-pro*   ) quasi=$1 ;;
			sb           ) [ $2 ] && { sb="$1 $2"; shift; } || usage ;;
			space        ) [ $2 ] && { space="$1 $2"; shift; } || usage ;;

			family       ) [ $ereader ] && [ $2 ] && { family=$2; shift; } || usage ;;
			nocopy       ) unset ecopy ;;
			--           ) shift; . $HOME/bin/functions/font/iosevka $@; exit ;;
			help         ) usage ;;
			*            ) usage ;;
		esac
		shift
	done
}

killall -q firefox  # release browser memory
killall -q chromium

cmdopts $@  # set commandline options

# build font suite
ifno 'build iosevka font suite' && exit

update() {
	fonts='*-book *-bookitalic *-bold *-bolditalic'
	cd $HOME/.fonts/$2

	for i in $fonts ;do
		# supplementary glyphs (as uncovered from ebooks)
		fforge map $i 2e22 300c  # add corner bracket punctuation
		fforge map $i 2e25 300d
		# e-reader font folders
		if [ $ecopy ] ;then
			file=$i.ttf
			FOLDER=$STOW/$ereader/fonts/$1
			mkdir -p $FOLDER
			cp -v $file $FOLDER/
		fi
	done
}

options() { echo $adjust $ascender $cap $quasi $leading $sb $style $D $G $I $J $L $Q $a $b $d $f $j $l $m $p $q $t $y $zero $at $paren $open $four $@; }  # list

# family [options]*
e_ink() {
	name=$1
	shift
	iosevka dyslexic $ereader $language q-hook $(options $@) emdash $emdash $space family $name
	update $GLYPH $name
}

dfont() { iosevka extended j-serifed q-hook Q-bar $(options $@) at-tall $cap; }
# wfont() { iosevka english  j-serifed G-hookless+ Q-bar $(options $@) asterisk-high; }  # override dyslexic "asterisk-low"
wfont() { iosevka english a-double j-serifed t-asymmetric G-hookless+ J-flat Q-bar $(options $@) asterisk-high emdash $emdash 4-open+; }
efont() { iosevka $language $(options $@); }

if [ "$classic" ] ;then
	cmdopts quasi-ext ${space:-space M} a-double
	[ $ereader = kobo ] && emdash=$emkobo || emdash=$emkindle  # == M + space width
	e_ink articulate  ${cap:-cap extended}            G-toothed             J-serifless Q-crossing
	e_ink typograffic ${cap:-cap extended} f-extended G-rounded I-serifless J-flat      Q-straight

elif [ "$mu" ] ;then
	cmdopts quasi-ext ${space:-space M} f-extended j-serifed G-hookless+ Q-straight open+
	[ $ereader = kobo ] && emdash=$emkobo || emdash=$emkindle  # == M + space width
	e_ink mu          ${cap:-cap extended}          I-descending
	e_ink mudra       ${cap:-cap extended}          Y-descending
	e_ink tundra      ${cap:-cap extended} a-single Y-descending

elif [ -z $ecopy ] ;then
	cmdopts quasi-ext space 1.105 m-rounded j-serifed Q-straight open+ altmono
	[ $ereader = kobo ] && emdash=$emkobo || emdash=$emkindle  # == M + space width
	cmdopts grote
	e_ink grote ${cap:-cap extended} I-descending l-serifless t-asymmetric+

elif [ "$duet" ] ;then
	cmdopts quasi-ext space 1.125 m-rounded j-serifed Q-straight open+ altmono
	[ $ereader = kobo ] && emdash=$emkobo || emdash=$emkindle  # == M + space width
	e_ink stria ${cap:-cap extended} I-serifed   
	cmdopts grote
	e_ink grote ${cap:-cap extended} I-descending l-serifless t-asymmetric+

elif [ "$trio" ] ;then
	cmdopts quasi-ext space 1.15 m-rounded j-serifed Q-straight open+
	[ $ereader = kobo ] && emdash=$emkobo || emdash=$emkindle  # == M + space width
	e_ink stria ${cap:-cap extended} I-serifed   
	e_ink groot ${cap:-cap extended} I-descending
	e_ink graal ${cap:-cap extended} I-descending a-single
	e_ink grote ${cap:-cap extended} I-descending l-serifless t-asymmetric+

elif [ $family ] ;then                    # custom e-ink font (non-published)
	e_ink $family

elif [ $web ] ;then                       # www fonts
	unset cap; emdash=$emkobo
	wfont heading  quasi-extension                              space 1.10 webfont      # wMonolegible
	wfont dyslexic quasi-extension    I-descending cap extended space 1.15 webfont      # wMonolexic
	wfont dyslexic quasi-extension                 cap extended space 1.15 webfont family wCaps
	wfont dyslexic quasi-proportional                           space 1.15 webfont      # wQuasilexic
	dfont ${cap:-cap extended}        I-serifed    G-toothed    J-flat             family wIosevka

elif [ $coding ] ;then                    # classic coding font
	cmdopts cap extended
	dfont $leading I-serifed G-toothed a-toothless f-extended family monodyslexic

else                                      # desktop fonts
	cmdopts cap extended
	dfont $leading I-serifed    f-serifless
	dfont proof    I-descending Q-straight     
	dfont menu     I-descending Q-straight     
	# dfont dyslexic            Q-straight      space 2   family qclocktwo leading 1.40
	dfont dyslexic I-serifed    Q-straight      space 2.2 family qclocktwo    # conky qclocktwo font
	dfont dyslexic I-descending quasi-extension space M   family monograffic  # panel/dunst/browser font
fi

# vim: set ft=sh: #
