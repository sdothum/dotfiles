#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl
[ $TRACE ] && CHILD="window/size $@" . $PARENT

# 2bwm
# ══════════════════════════════════════════════════════════════════════════════

# .............................................................. Set window size

# Usage: window size [@<delay>] <height>x<width> | monocle | rotate | <numerator>/<denominator> (of screen width)

X=1024
Y=800
T=2
ASPECT=4:3  # ratio (being a photographer..)

# ................................................................. Aspect ratio

aspect() {
	numerator=$1
	denominator=$2
	# an arbitrary aspect ratio calculation
	X=$(echo "scale=2\n$width * $numerator / $denominator - $margin" | bc | cut -d. -f1)
	Y=$(echo "scale=2\n$X * ${ASPECT%:*} / ${ASPECT#*:}" | bc | cut -d. -f1)
	[ $Y -lt $height ] || Y=$(echo "scale=2\n$X * ${ASPECT#*:} / ${ASPECT%:*}" | bc | cut -d. -f1)  # fit window to screen
	winid=$(winid)
	draw $winid $X $Y
}

# ...................................................................... Monocle

monocle() {
	save_geometry
	sleep 0.1                                   # allow user keyboard release
	xdotool key --delay 100 Super+Shift+Ctrl+1  # see 2bwm config.h
}

# ................................................................... Paper size

paper() {
	case $1 in
		A3* ) draw $winid 1334 1890 $2 ;;
		B4* ) draw $winid 1123 1587 $2 ;;
		A4* ) draw $winid  945 1334 $2 ;;
		B5* ) draw $winid  794 1123 $2 ;;
		A5* ) draw $winid  665  945 $2 ;;
		B6* ) draw $winid  559  794 $2 ;;
		A6* ) draw $winid  472  665 $2 ;;
		B7* ) draw $winid  397  559 $2 ;;
	esac
}

# do we need to gain correct focus?
[ "${1%%@*}" ] || { sleep ${1#@}; winid=$(winid); shift; }

case $1 in
	mon*  ) monocle  ;;
	[AB]* ) paper $1 $2 ;;
	*/*   ) aspect ${1%/*} ${1#*/} ;;
	*x*   ) draw $winid ${1%x*} ${1#*x} ;;
	*     ) draw $winid ${width:-$X} ${height:-$Y} ;;
esac


# vim: set ft=sh: #

