#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl
[ $TRACE ] && CHILD="window/size $@" . $PARENT

# 2bwm
# ══════════════════════════════════════════════════════════════════════════════

# .............................................................. Set window size

# Usage: window size <height>x<width> | monocle | rotate | <numerator>/<denominator> (fraction :)

X=1024
Y=800
T=2

TWOBWM_CONFIG=$HOME/.config/2bwm/src/config.h
WINFO=$TWOBWM:window

winid=$(xdotool getwindowfocus -f)

save_geometry() { xdotool getwindowgeometry --shell $winid >$WINFO:$winid; }  # for revert

# ..................................................................... X Y size

draw() {
	save_geometry
	xdotool windowunmap $1               # defer visual refresh
	xdotool windowsize --sync $1 $2 $3
	xdotool windowmap --sync $1
	[ $4 ] || xdotool key Super+Shift+g  # 2bwm vertical center
}

# ................................................................ Revert layout

revert() {
	[ -e $WINFO:$winid ] && eval $(cat $WINFO:$winid) || exit
	draw $winid $WIDTH $HEIGHT revert
	xdotool windowmove $winid $X $Y
}

# .......................................................... Proportional layout

calc_window() {
	numerator=$1
	denominator=$2
	# 2bwm screen geometry
	set -- $(grep '^static const uint8_t offsets' $TWOBWM_CONFIG | sed 's/.*[{]//; s/[}].*//; s/,/ /g')
	PANEL_HEIGHT=$2        # assumes equal top/bottom screen margins
	MARGIN=$1              # assumes equal left/right screen margins
	shift 4
	width=$(( $(query display width) - $MARGIN * 2 ))
	height=$(( $(query display height) - $PANEL_HEIGHT * 2 ))

	X=$(echo "scale=2\n$width * $numerator / $denominator - $MARGIN" | bc | cut -d. -f1)
	Y=$(echo "scale=2\n$height - $PANEL_HEIGHT * ($denominator / $numerator) * ($denominator / $numerator)" | bc | cut -d. -f1)
	# wrs -a $X $Y $(pfw)  # BUG: inconsistent behaviour
	winid=$(xdotool getwindowfocus -f)
	draw $winid $X $Y
}

# ................................................................ Rotate window

rotate() {
	winid=$(xdotool getwindowfocus -f)
	XY=$(xdotool getwindowgeometry $winid | grep -i 'geometry' | cut -d: -f2)
	draw $winid ${XY#*x} ${XY%x*}
}

# ...................................................................... Monocle

monocle() {
	save_geometry
	sleep 0.1                                   # allow user keyboard release
	xdotool key --delay 100 Super+Shift+Ctrl+1  # see 2bwm config.h
}

case $1 in
	rev* ) revert ;;
	rot* ) rotate ;;
	mon* ) monocle ;;
	*/*  ) calc_window ${1%/*} ${1#*/} ;;
	*x*  ) draw $winid ${1%x*} ${1#*x} ;;
	*    ) draw $winid ${height:-$X} ${width:-$Y} ;;
esac


# vim: set ft=sh: #

