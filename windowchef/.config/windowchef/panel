#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl
[ $TRACE ] && CHILD="panel $@" . $PARENT

# Windowchef
# ══════════════════════════════════════════════════════════════════════════════

# ................................................................... Draw panel

# Usage: draw <msg>, see functions/panel

DOTDIR=$(dirname $0)/functions/draw
SPANEL=$SESSION/panel   # toggle state
[ -e $SPANEL ] || exit  # no panel
PANELTOP=$SPANEL:top
STARTREK=$SPANEL:startrek
STAT=$SPANEL:stat
TICKER=$SPANEL:ticker
WEATHER=$SPANEL:weather

which lemonbar >/dev/null 2>&1   || exit
fifo=$1:${DISPLAY#:}  # for multi-monitor setup
pstat "lemonbar -d -n lemonbar:$1" && exit
toggle picom on

# .................................................................. Panel theme

DEFAULT_BG='#00000000'     # alpha channel for panel transparency with picom
DEFAULT_FG="#$(rice color default)"
ACTIVE_FG="#$(rice color active)"
INACTIVE_FG="#$(rice color inactive)"
FREE_FG="#$(rice color free)"
OCCUPIED_FG=$FREE_FG

# panel font
PANEL_FONT=monograffic  # NOTE: this font for glyphs!
PANEL_UNDERLINE=2       # thickness

# panel symbols (tag numbers option dropped to simplify colour assignments)
case $(chef display width) in
	3440 ) TAG_PAD='      '; STATPAD='   ' ;;  # tag bar separator (visual spacing)
	1920 ) TAG_PAD='     ' ; STATPAD='  '  ;;
	*    ) TAG_PAD='    '  ; STATPAD='  '  ;;
esac
[ $(chef display width) -lt 1920 ] && scaledown=true
[ $scaledown ] && { LSEP=${LSEP# }; LSEP=${LSEP% }; RSEP=${RSEP# }; RSEP=${RSEP% }; }

# ..................................................................... Geometry

# Windowchef panel geometry
PANEL_HEIGHT=$(chef screen panel)
PANEL_INDENT=$(chef screen indent)  # assumes equal left/right screen margins

fontsize=$(fontsize)
[ $scaledown ] && fontsize=$(( fontsize - 1 ))
width=$(chef display width)

panel_offsetY=$(( $(chef display height) - PANEL_HEIGHT ))  # bottombar (topbar = 0)
panel_offsetX=$PANEL_INDENT
panel_width=$(( width - PANEL_INDENT * 2 ))

# ................................................................... Tag status

# desktops
tagcount=$(chef desktop count)
DESKTOPS=$(seq 1 $tagcount)

# desktop (group) windows NOTE: -1 is undefined group
for i in -1 $(seq 1 9) ;do touch $GROUP:$i ;done  # preserve if switching panels within startx session

windows()      { cat $GROUP:$1 | wc -l; }
visible()      { cat $GROUP:$1 | wc -l; }
hidden()       { find /tmp -regex "$HIDDEN:.*" | wc -l; }
nilgroup()     { wmctrl -l | grep ' -1 ' | wc -l; }
has_windows()  { [ $(windows $1) -gt 0 ]; }
has_visible()  { [ $(visible $1) -gt 0 ]; }
has_hidden()   { [ $(hidden)     -gt 0 ]; }
has_nilgroup() { [ $(nilgroup)   -gt 0 ]; }
deactivated()  { [ -e $GROUP:$1:deactivated ]; }

# ................................................................... Draw panel

handlebar() {
	lemonbar -d -n "lemonbar:$fifo"                         \
		-g ${panel_width}x$PANEL_HEIGHT+$panel_offsetX+$panel_offsetY \
		-u $PANEL_UNDERLINE                                           \
		-f "$PANEL_FONT:size=$fontsize" -F "$DEFAULT_FG" -B "$DEFAULT_BG"
}

msg=$1
[ $msg ] && shift || usage: $0
if [ -e ${0%/panel}/functions/panel/$msg ] ;then
	. ${0%/panel}/functions/panel/$msg $@
else
	usage: $0
fi

# kak: filetype=sh
