--- client.c	2024-05-16 10:11:31.403756950 -0400
+++ client.c.update	2024-06-22 16:10:08.711174605 -0400
@@ -53,59 +53,60 @@
 
 /* vim-tabularize is cool, i swear */
 static struct Command c[] = {
-	{ "window_move"               , IPCWindowMove            ,  2 , fn_offset   } ,
-	{ "window_move_absolute"      , IPCWindowMoveAbsolute    ,  2 , fn_offset   } ,
-	{ "window_resize"             , IPCWindowResize          ,  2 , fn_offset   } ,
-	{ "window_resize_absolute"    , IPCWindowResizeAbsolute  ,  2 , fn_naturals } ,
-	{ "window_maximize"           , IPCWindowMaximize        ,  0 , NULL        } ,
-	{ "window_unmaximize"         , IPCWindowUnmaximize      ,  0 , NULL        } ,
-	{ "window_hor_maximize"       , IPCWindowHorMaximize     ,  0 , NULL        } ,
-	{ "window_ver_maximize"       , IPCWindowVerMaximize     ,  0 , NULL        } ,
-	{ "window_monocle"            , IPCWindowMonocle         ,  0 , NULL        } ,
-	{ "window_close"              , IPCWindowClose           ,  0 , NULL        } ,
-	{ "window_put_in_grid"        , IPCWindowPutInGrid       ,  6 , fn_hack     } ,
-	{ "window_move_in_grid"       , IPCWindowMoveInGrid      ,  2 , fn_offset   } ,
-	{ "window_resize_in_grid"     , IPCWindowResizeInGrid    ,  2 , fn_offset   } ,
-	{ "window_snap"               , IPCWindowSnap            ,  1 , fn_position } ,
-	{ "window_cycle"              , IPCWindowCycle           ,  0 , NULL        } ,
-	{ "window_rev_cycle"          , IPCWindowRevCycle        ,  0 , NULL        } ,
-	{ "window_cycle_in_group"     , IPCWindowCycleInGroup    ,  0 , NULL        } ,
-	{ "window_rev_cycle_in_group" , IPCWindowRevCycleInGroup ,  0 , NULL        } ,
-	{ "window_cardinal_focus"     , IPCWindowCardinalFocus   ,  1 , fn_direction} ,
-	{ "window_focus"              , IPCWindowFocus           ,  1 , fn_hex      } ,
-	{ "window_focus_last"         , IPCWindowFocusLast       ,  0 , NULL        } ,
-	{ "group_add_window"          , IPCGroupAddWindow        ,  1 , fn_naturals } ,
-	{ "group_remove_window"       , IPCGroupRemoveWindow     ,  0 , NULL        } ,
-	{ "group_remove_all_windows"  , IPCGroupRemoveAllWindows ,  1 , fn_naturals } ,
-	{ "group_activate"            , IPCGroupActivate         ,  1 , fn_naturals } ,
-	{ "group_deactivate"          , IPCGroupDeactivate       ,  1 , fn_naturals } ,
-	{ "group_toggle"              , IPCGroupToggle           ,  1 , fn_naturals } ,
-	{ "group_activate_specific"   , IPCGroupActivateSpecific ,  1 , fn_naturals } ,
-	{ "wm_quit"                   , IPCWMQuit                ,  1 , fn_naturals } ,
-	{ "wm_config"                 , IPCWMConfig              , -1 , fn_config   },
+	{ "window_move"                , IPCWindowMove                    ,  2 , fn_offset   } ,
+	{ "window_move_absolute"       , IPCWindowMoveAbsolute            ,  2 , fn_offset   } ,
+	{ "window_resize"              , IPCWindowResize                  ,  2 , fn_offset   } ,
+	{ "window_resize_absolute"     , IPCWindowResizeAbsolute          ,  2 , fn_naturals } ,
+	{ "window_maximize"            , IPCWindowMaximize                ,  0 , NULL        } ,
+	{ "window_unmaximize"          , IPCWindowUnmaximize              ,  0 , NULL        } ,
+	{ "window_hor_maximize"        , IPCWindowHorMaximize             ,  0 , NULL        } ,
+	{ "window_ver_maximize"        , IPCWindowVerMaximize             ,  0 , NULL        } ,
+	{ "window_monocle"             , IPCWindowMonocle                 ,  0 , NULL        } ,
+	{ "window_close"               , IPCWindowClose                   ,  0 , NULL        } ,
+	{ "window_put_in_grid"         , IPCWindowPutInGrid               ,  6 , fn_hack     } ,
+	{ "window_move_in_grid"        , IPCWindowMoveInGrid              ,  2 , fn_offset   } ,
+	{ "window_resize_in_grid"      , IPCWindowResizeInGrid            ,  2 , fn_offset   } ,
+	{ "window_snap"                , IPCWindowSnap                    ,  1 , fn_position } ,
+	{ "window_cycle"               , IPCWindowCycle                   ,  0 , NULL        } ,
+	{ "window_rev_cycle"           , IPCWindowRevCycle                ,  0 , NULL        } ,
+	{ "window_cycle_in_group"      , IPCWindowCycleInGroup            ,  0 , NULL        } ,
+	{ "window_rev_cycle_in_group"  , IPCWindowRevCycleInGroup         ,  0 , NULL        } ,
+	{ "window_cardinal_focus"      , IPCWindowCardinalFocus           ,  1 , fn_direction} ,
+	{ "window_focus"               , IPCWindowFocus                   ,  1 , fn_hex      } ,
+	{ "window_focus_last"          , IPCWindowFocusLast               ,  0 , NULL        } ,
+	{ "window_stack_toggle"        , IPCWindowStackToggle             ,  0 , NULL        } ,
+	{ "group_add_window"           , IPCGroupAddWindow                ,  1 , fn_naturals } ,
+	{ "group_remove_window"        , IPCGroupRemoveWindow             ,  0 , NULL        } ,
+	{ "group_remove_all_windows"   , IPCGroupRemoveAllWindows         ,  1 , fn_naturals } ,
+	{ "group_activate"             , IPCGroupActivate                 ,  1 , fn_naturals } ,
+	{ "group_deactivate"           , IPCGroupDeactivate               ,  1 , fn_naturals } ,
+	{ "group_toggle"               , IPCGroupToggle                   ,  1 , fn_naturals } ,
+	{ "group_activate_specific"    , IPCGroupActivateSpecific         ,  1 , fn_naturals } ,
+	{ "wm_quit"                    , IPCWMQuit                        ,  1 , fn_naturals } ,
+	{ "wm_config"                  , IPCWMConfig                      , -1 , fn_config   } ,
 };
 
 static struct ConfigEntry configs[] = {
-	{ "border_width"        , IPCConfigBorderWidth       , 1 , fn_naturals },
-	{ "color_focused"       , IPCConfigColorFocused      , 1 , fn_hex      },
-	{ "color_unfocused"     , IPCConfigColorUnfocused    , 1 , fn_hex      },
-	{ "internal_border_width", IPCConfigInternalBorderWidth, 1 , fn_naturals },
-	{ "internal_color_focused", IPCConfigInternalColorFocused, 1 , fn_hex },
-	{ "internal_color_unfocused", IPCConfigInternalColorUnfocused, 1 , fn_hex },
-	{ "gap_width"           , IPCConfigGapWidth          , 2 , fn_gap      },
-	{ "grid_gap_width"      , IPCConfigGridGapWidth      , 1 , fn_naturals },
-	{ "cursor_position"     , IPCConfigCursorPosition    , 1 , fn_position },
-	{ "groups_nr"           , IPCConfigGroupsNr          , 1 , fn_naturals },
-	{ "enable_sloppy_focus" , IPCConfigEnableSloppyFocus , 1 , fn_bool     },
-	{ "enable_resize_hints" , IPCConfigEnableResizeHints , 1 , fn_bool     },
-	{ "sticky_windows"      , IPCConfigStickyWindows     , 1 , fn_bool     },
-	{ "enable_borders"      , IPCConfigEnableBorders     , 1 , fn_bool     },
-	{ "enable_last_window_focusing", IPCConfigEnableLastWindowFocusing, 1 , fn_bool },
-	{ "apply_settings"      , IPCConfigApplySettings     , 1 , fn_bool     },
-	{ "replay_click_on_focus" , IPCConfigReplayClickOnFocus, 1, fn_bool    },
-	{ "pointer_actions"     , IPCConfigPointerActions    , 3 , fn_pac      },
-	{ "pointer_modifier"    , IPCConfigPointerModifier   , 1 , fn_mod      },
-	{ "click_to_focus"      , IPCConfigClickToFocus      , 1 , fn_button   },
+	{ "border_width"               , IPCConfigBorderWidth             , 1  , fn_naturals } ,
+	{ "color_focused"              , IPCConfigColorFocused            , 1  , fn_hex      } ,
+	{ "color_unfocused"            , IPCConfigColorUnfocused          , 1  , fn_hex      } ,
+	{ "internal_border_width"      , IPCConfigInternalBorderWidth     , 1  , fn_naturals } ,
+	{ "internal_color_focused"     , IPCConfigInternalColorFocused    , 1  , fn_hex }      ,
+	{ "internal_color_unfocused"   , IPCConfigInternalColorUnfocused  , 1  , fn_hex }      ,
+	{ "gap_width"                  , IPCConfigGapWidth                , 2  , fn_gap      } ,
+	{ "grid_gap_width"             , IPCConfigGridGapWidth            , 1  , fn_naturals } ,
+	{ "cursor_position"            , IPCConfigCursorPosition          , 1  , fn_position } ,
+	{ "groups_nr"                  , IPCConfigGroupsNr                , 1  , fn_naturals } ,
+	{ "enable_sloppy_focus"        , IPCConfigEnableSloppyFocus       , 1  , fn_bool     } ,
+	{ "enable_resize_hints"        , IPCConfigEnableResizeHints       , 1  , fn_bool     } ,
+	{ "sticky_windows"             , IPCConfigStickyWindows           , 1  , fn_bool     } ,
+	{ "enable_borders"             , IPCConfigEnableBorders           , 1  , fn_bool     } ,
+	{ "enable_last_window_focusing", IPCConfigEnableLastWindowFocusing, 1  , fn_bool }     ,
+	{ "apply_settings"             , IPCConfigApplySettings           , 1  , fn_bool     } ,
+	{ "replay_click_on_focus"      , IPCConfigReplayClickOnFocus      , 1  , fn_bool    }  ,
+	{ "pointer_actions"            , IPCConfigPointerActions          , 3  , fn_pac      } ,
+	{ "pointer_modifier"           , IPCConfigPointerModifier         , 1  , fn_mod      } ,
+	{ "click_to_focus"             , IPCConfigClickToFocus            , 1  , fn_button   } ,
 };
 
 /*
