--- wm.c.@xbps	2024-05-17 10:27:07.711295787 -0400
+++ wm.c	2024-06-22 16:11:26.078173244 -0400
@@ -92,6 +92,7 @@
 static void set_focused_no_raise(struct client *);
 static void set_focused(struct client *);
 static void set_focused_last_best();
+static void window_stack_toggle(struct client *);
 static void raise_window(xcb_window_t);
 static void close_window(struct client *);
 static void delete_window(xcb_window_t);
@@ -188,6 +189,7 @@
 static void ipc_window_cardinal_focus(uint32_t *);
 static void ipc_window_focus(uint32_t *);
 static void ipc_window_focus_last(uint32_t *);
+static void ipc_window_stack_toggle(uint32_t *);
 static void ipc_group_add_window(uint32_t *);
 static void ipc_group_remove_window(uint32_t *);
 static void ipc_group_remove_all_windows(uint32_t *);
@@ -821,6 +823,19 @@
 }
 
 /*
+ * Set window to the top or bottom of the window stack depending on where it is now.
+ */
+
+static void
+window_stack_toggle(struct client *client)
+{
+	uint32_t values[1] = { XCB_STACK_MODE_OPPOSITE };
+	// xcb_window_t win = client->window;
+	// xcb_configure_window(conn, win, XCB_CONFIG_WINDOW_STACK_MODE, values);
+	xcb_configure_window(conn, client->window, XCB_CONFIG_WINDOW_STACK_MODE, values);
+}
+
+/*
  * Put window at the top of the window stack.
  */
 
@@ -2817,6 +2832,7 @@
 	ipc_handlers[IPCWindowCardinalFocus]   = ipc_window_cardinal_focus;
 	ipc_handlers[IPCWindowFocus]           = ipc_window_focus;
 	ipc_handlers[IPCWindowFocusLast]       = ipc_window_focus_last;
+	ipc_handlers[IPCWindowStackToggle]     = ipc_window_stack_toggle;
 	ipc_handlers[IPCGroupAddWindow]        = ipc_group_add_window;
 	ipc_handlers[IPCGroupRemoveWindow]     = ipc_group_remove_window;
 	ipc_handlers[IPCGroupRemoveAllWindows] = ipc_group_remove_all_windows;
@@ -3174,6 +3190,16 @@
 }
 
 static void
+ipc_window_stack_toggle(uint32_t *d)
+{
+	(void)(d);
+	if (focused_win == NULL)
+		return;
+
+	window_stack_toggle(focused_win);
+}
+
+static void
 ipc_group_add_window(uint32_t *d)
 {
 	if (focused_win != NULL)
