# sdothum - 2016 (c) wtfpl
[ $TRACE ] && CHILD="menu/wikis $@" . $PARENT

# Windowchef
# ══════════════════════════════════════════════════════════════════════════════

# ......................................................................... Wiki

# Usage: menu wiki [diary]

EDIT='new'
DIARY='diary'

EDITOR=${EDITOR:-kak -LEXICON -PROOF ID=wiki}
DICTIONARY=$HOME/.config/kak-lsp/kak-lsp:dictionary
[ -e $DICTIONARY ] || unset DICTIONARY

WIKIS="$HOME/vimwiki"
[ $1 ] && prompt=Diary || { option=-v; prompt=Wiki; menu="\n$(X $DIARY)"; }

files() { fcache f $WIKIS | grep $option '/diary/' | grep '\.wiki$' | sed 's/\.wiki$//' | grep -E -v '/(diary|index)$'; }
dirs()  { find -L $WIKIS -maxdepth 2 -type d | sort | exclude 'mail|templates|xref' | grep $option '/diary' | sed "s,$WIKIS/,,; 1d"; }

# recover full pathname
expand() {
	[ -e "$WIKIS/$1.wiki" ] || return 1
	echo "$WIKIS/$1.wiki"
	return 0
}

linkname() {  echo "$file" | tr ' ' '_'; }

# NOTE: symlink files removed post SEE: rsync vps
filename_check() {
	# apostrophes in filename cannot be handled by duochrome statusline.. so substitute carets
	[ "${file%\'*}" = "$file" ] || { link=/tmp/$(echo "${file##*/}" | tr \' ^); ln -sf "$file" "$link"; file=$link; }
	# simplify file name handling of spaces by adding '_' symbolic link (to spare escape horror)
	[ "${file%\ *}" = "$file" ] || { linkname=$(linkname); ln -sf "$file" $linkname; file=$linkname; }
}

add() {
	wiki=$(echo | mhistory wiki$1 | head -1 | sed "s/.*^$SEP *//")  # last folder
	wiki=$(dirs | rmenu "$prompt" $wiki -no-custom) || exit
	[ "$1" ] || { [ $prompt = Diary ] && title=$(date '+%Y-%m-%d'); } || title=$(echo | rmenu 'Title') || exit
	mhistory wiki$1 "$title^$SEP $wiki"
	file="$WIKIS/$wiki/$title.wiki"
	# prepend h1 title
	echo "# $title\n\n[ kak: filetype=markdown ]: #" >"$file"
	# HACK: link gets written over as regular file so loop back to menu to edit as old
}

wiki() {
	mhistory wiki$1 "$(echo $file | sed "s/ *$SEP/^$SEP/")"
	file="$(echo $file | sed -r "s,(.*)  *$SEP  *(.*),\2/\1,")"
	if expand "$file" >/dev/null ;then
		file="$(expand "$file")"
		filename_check
		class=wiki $EDITOR "$file" $DICTIONARY
	else
		error=": ${file##*/} ∉ ${file%/*}"
		sed -i "\|${file##*/}.$SEP ${file%/*}$|d" $HISTORY/wiki
		file="${file##*/}"
		return 1
	fi
}

while : ;do
	file="$(files | sed "s,$WIKIS/,," | sed -r "s,(.*)/([^/]*)$,\2^$SEP \1," \
		| sort | mhistory wiki$1 | column -s^ -t | sed  "2i$(X $EDIT)$menu"  \
		| rmenu "Edit $prompt$error" -no-custom)" || exit

	case ${file#$(X)} in
		"$DIARY" ) exec menu wikis diary ;;

		"$EDIT"  )
			add                                # only creates stub
			(sleep 0.1; xdotool key Return) &  # loop back to menu to acutally open file!
			continue
			;;
		*        ) wiki ;;
	esac
	break
done

# kak: filetype=sh
