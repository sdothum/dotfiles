# sdothum - 2016 (c) wtfpl
[ $TRACE ] && CHILD="panel/mpd $@" . $PARENT

# Windowchef
# ══════════════════════════════════════════════════════════════════════════════

# ................................................................... Draw panel

# Usage: panel music [<offset Y>]
#
# NOTE: this script is executed via "draw panel" SEE: also restore panel

exists mpc || exit
[ $1 ] && panel_offsetY=$1

if [ "$panel_offsetY" = "0" ] ;then  # ATTN: use of -eq fails comparison (?)
	SEP="  %{F$INACTIVE_FG}%{F-}  "  # top bar
else
	SEP="  %{F$INACTIVE_FG}%{F-}  "  # bottom bar
fi
DLM=$(printf '\t')                   # default cut delimiter
FAINT=$(transparency 80 "$ICANDY")   # dim icon
FLASH=$(transparency D0 "$ICANDY")   # dim icon

# ............................................................... FIFO read loop

field()  { echo "$line" | cut -f$1; }
folder() { folder=$(field 5); echo "/home/music/${folder%%/*}"; }

seconds() {
	M=${1%:*}
	if [ $M -gt 59 ] ;then  # NOTE: mpd does not return %H
		H=$(( M / 60 ))
		M=$(( M - (H * 60) ))
		T=$(printf "%02d:%02d:%s" $H $M ${1#*:})
	else
		T=00:$1
	fi
	date -d "1970-01-01 $T Z" +%s
}

folder=''
panel() {
	while read -r line ;do
		status=$(mpc status | sed -n '2p')
		case ${status%% *} in
			'[playing]' )
				T=$(echo $status | cut -d' ' -f3)
				duration=$(date -d@$(( $(seconds ${T#*/}) - $(seconds ${T%/*}) )) -u +%-H’%M’%S)
				duration=${duration#0’}  # prune 0 hours
				duration=${duration#0}   # prune leading zero minutes
				if [ "$line" != "$currently" ] ;then
					DURATION=$duration  # full play length
					currently="$line"
					artist="$(field 1)"
					album="$(field 2)"
					playing="$(field 3) • "
					track="$(field 4)"
					if [ "$(folder)" != "$from" ] || [ -z $TRACKS ];then
						from="$(folder)"
						cd "$from"
						TRACKS=$(metaflac | grep "@track" | wc -l)
					fi
					[ $track = $TRACKS ] && unset TRACKS
				fi
				song="$playing"
				playing="$(ribbon "$playing")"
				[ "${button%►}" = "%{F$ICANDY}" ] && button="%{F$FLASH}►" || button="%{F$ICANDY}►"
				;;

			'[paused]'  ) button="%{F$FAINT}■" ;;      # dimmed :)
			*           ) [ "$line" = 'CLEAR' ] && printf "%s\n" "%{c} "; continue ;;
		esac
		printf "%s\n" "%{c}${artist}${SEP}${album}${SEP}${song}${SEP}${track}␥${TRACKS}  $DURATION ${button} %{F-}${duration}"
	done
}

# ......................................................................... FIFO

# initialize fifo
[ -e $PANEL_FIFO:$fifo ] && rm -f $PANEL_FIFO:$fifo
mkfifo $PANEL_FIFO:$fifo

# NOTE: mpc does not output current if the playlist is empty
while : ;do
	current=$(mpc --format "%artist%${DLM}%album% ‧ %date%${DLM}%title%${DLM}%track%${DLM}%file%" current)
	case "$current" in
		'' ) echo CLEAR      ;;
		*  ) echo "$current" ;;
	esac
	sleep 1
done >$PANEL_FIFO:$fifo &

cat $PANEL_FIFO:$fifo | panel | handlebar &

# kak: filetype=sh
