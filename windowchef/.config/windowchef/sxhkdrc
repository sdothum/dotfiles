# sdothum - 2016 (c) wtfpl

# Windowchef
# ══════════════════════════════════════════════════════════════════════════════

# ...................................................................... Hotkeys

# NOTE: only use groups 1-9 with desktop 0 reserved for special actions (typically, "last")

# ................................................................. (chef) menus

super + {F1,F2}
	souschef {group, window}

super + {shift,ctrl} + q
	{menu halt, waitron wm_quit 0}

super + shift + w
	menu windowfocus

super + {alt,ctrl} + w
	souschef window {tile,form}

super + shift + ctrl + w
	menu layout

# ........................................................................ terms

super + {_,shift} + Return
	scratchpad {scratchy, itchy}

super + ctrl + Return
	term

super + alt + t
	for i in $(xdotool search --onlyvisible --classname "term") ;do xdotool windowactivate --sync $i; window desktop $(chef desktop "CODE") teleport ;done

# ....................................................................... resize

super + {_,ctrl} + space
	waitron {window_ver_maximize, window_hor_maximize}

super + alt + space
	window size term            ;\
	wgeometry record $(pfw)     ;\
	window snap center vertical ;\
	wgeometry restore $(pfw)

super + ctrl + shift + {Left,Down,Up,Right}
	waitron window_resize {-20 0, 0 20, 0 -20, 20 0}

super + shift + {Left,Down,Up,Right}
	waitron window_resize {-50 0, 0 50, 0 -50, 50 0}

super + shift + {t,s}
	window tile {left, right}

super + {_,shift} + z
	waitron {window_monocle, window_maximize}

# ....................................................................... select

super + {_,shift} + Tab
	waitron {window_cycle_in_group, window_rev_cycle_in_group} ;\
	chef -- desktop

alt + {_,super} + Tab
	waitron {window_cycle, window_rev_cycle} ;\
	chef -- desktop

super + ctrl + Tab
	waitron window_focus_last ;\
	chef -- desktop

alt + {Left,Down,Up,Right}
	waitron window_cardinal_focus {west, south, north, east} ;\
	chef -- desktop

# ......................................................................... swap

alt + super + {Left,Down,Up,Right}
	window swap {west, south, north, east}

# ......................................................................... move

super + ctrl + {Left,Down,Up,Right}
	waitron window_move {-20 0, 0 20, 0 -20, 20 0}

super + {Left,Down,Up,Right}
	waitron window_move {-50 0, 0 50, 0 -50, 50 0}

super + ctrl + {p,l,n,f}
	window shift {left, down, up, right}

super + {d,m}
	window snap top {left, right}

super + ctrl + e
	layout level

super + {_,ctrl,shift} + g
	window snap center {  ,left, right}

super + {n,l}
	window snap {top,bottom}

super + {p,f}
	window snap bottom {left, right}

super + {_,shift} + r
	window snap center {horizontal, vertical}

super + {t,s}
	side="{left, right}" ;\
	[ "$(chef window classname)"  = "term" ] && window spread 3 $side || window snap $side

# ....................................................................... window

super + {0,1}
	window {revert, rotate}

super + ctrl + 0
	layout revert

super + {_,shift} + i
	{window hide, menu unhide} ;\
	chef -- hidden

super + {_,shift} + e
	waitron {window_stack_toggle, window_focus $(pfw)} ;\
	chef -- desktop

super + w
	window group remove       ;\
	waitron window_close      ;\
	waitron window_focus_last ;\
	chef -- desktop

# ................................................................ (tile) column

super + 2
	window size monocle

super + {5,6,3}
	window tile 3 {1, 2, 3}

super + {4,8,7,9}
	window tile 4 {1, 2, 3, 4}

# ......................................................................... tile

super + shift + {0,1,2,3,4,5}
	W=$(pfw)                                                ;\
	layout fold {0, 1, 2, 3, 4, 5} $(chef window classname) ;\
	waitron window_focus $W

super + shift + ctrl + 0
	W=$(pfw)      ;\
	layout fold 0 ;\
	waitron window_focus $W

# ........................................................................ group

alt + {0,1,2,3,4,5,6,7,8,9}
	desktop {last, 1, 2, 3, 4, 5, 6, 7, 8, 9}

alt + super + {0,1,2,3,4,5,6,7,8,9}
	desktop {$(desktop), 1, 2, 3, 4, 5, 6, 7, 8, 9} toggle

alt + shift + {0,1,2,3,4,5,6,7,8,9}
	desktop {$(desktop), 1, 2, 3, 4, 5, 6, 7, 8, 9} specific

alt + ctrl + 0
	desktop restore

super + ctrl + {1,2,3,4,5,6,7,8,9}
	desktop {1, 2, 3, 4, 5, 6, 7, 8, 9} close ;\
	waitron window_focus_last                 ;\
	chef -- desktop

# ............................................................... window (group)

alt + ctrl + {comma,period}
	window desktop $(desktop get {-1, +1})

alt + ctrl + super + {comma,period}
	window desktop $(desktop get {-1, +1}) teleport

alt + ctrl + {1,2,3,4,5,6,7,8,9}
	window desktop {1, 2, 3, 4, 5, 6, 7, 8, 9}

alt + ctrl + super + {1,2,3,4,5,6,7,8,9}
	window desktop {1, 2, 3, 4, 5, 6, 7, 8, 9} teleport

super + ctrl + r
	waitron group_remove_window ;\
	chef -- desktop

# ........................................................................... ui

super + {F6,F5}
	brightness {-5, +5}

ctrl + {_,shift} + space
	dunstctl {close, close-all}

ctrl + BackSpace
	dunstctl history-pop

super + {_,ctrl} + a
	conky clock {_, toggle}

super + {shift,ctrl} + d
	toggle {wallpaper, background}

super + {_,ctrl} + v
	{toggle panel, invert_panel}

# HACK: kak hook *Idle only triggers on keypress SEE: kakrc
# ATTENTION: use {shift,alt,ctrl,super} + Caps_Lock to bypass keypress trigger event

~Caps_Lock
	xdotool key Right Left

# ........................................................................... ux

# center mouse pointer

super + ctrl + shift + space
	xdotool mousemove $(( $(chef display width) / 2 )) $(( $(chef display height) / 2 ))

# NOTE: restore mouse focus after group_activate (of top of window stack)
# HACK: bypass QT apps to avoid interference with mouse menus

~button1
	xdotool getwindowclassname $(pfw) | grep -q -E "calibre|fontmatrix" && exit ;\
	pfw >$WME:mouse                                                             ;\
	chef -- desktop                                                             ;\
	waitron window_focus $(cat $WME:mouse)

# BUG: manual keybinds circumvent (random) X session clipboard loss (cause unknown)
# HISTORY: cb replaces "xclip {-in, -out} -selection clipboard"

~ctrl + {c,x}
	S=$(xsel -p) && [ -n "$S" ] && echo -n "$S" | cb {copy, cut}

~ctrl + v
	cb paste

# ~ctrl + c
# 	S=$(xsel -p) && [ -n "$S" ] && echo -n "$S" | copyq copy

# ~ctrl + x
# 	S=$(xsel -p) && [ -n "$S" ] && echo -n "$S" | copyq copy ;\
# 	xdotool key Del

# ~ctrl + v
# 	copyq paste

# ........................................................................ sxhkd

super + Escape
	notify reloading "sxhkd & ruler" ;\
	pkill -USR1 -x sxhkd             ;\
	pkill -KILL -x ruler             ;\
	ruler -i -c $HOME/.config/$WM/rulerrc &

super + shift + Escape
	kak $(find $HOME/.config/${WM}/ -maxdepth 1 -type f -name '*rc')

# ........................................................................ menus

super + shift + space
	menu

super + {shift,ctrl} + apostrophe
	menu {wikis, notes}

super + shift + a
	menu reminder

super + {_,shift} + o
	menu {scripts, projects}

super + shift + {u,v,colon}
	menu {passwords, media, system}

super + shift + y
	menu abook

# ......................................................................... http

super + {_,ctrl} + b
	qutebrowser {_, closeall}

super + shift + b
	layout fold 3 qutebrowser

super + h
	xdotool search --onlyvisible --classname "Surf" windowactivate && window tile 4 1 || hangouts

# NOTE: removal of random empty secondary nicotine window frame (cause unknown) requires repeating key action

super + shift + j
	xdotool search --onlyvisible --classname "org.nicotine_plus.Nicotine" windowunmap && desktop $(chef desktop "DESK") || \{ nicotine+; desktop $(chef desktop "PEER"); \}  # NOTE: escaped { block }

super + {_,ctrl} + k
	xdotool search --onlyvisible --name "∏ano - qutebrowser" {windowunmap, windowkill} || piano

# .......................................................................... mpc

# NOTE: switch out to DESK desktop after hiding app to avoid attaching new windows to app desktop

super + j
	xdotool search --onlyvisible --classname "music" windowunmap && desktop $(chef desktop "DESK") || \{ music; desktop $(chef desktop "PLAY"); \}

super + ctrl + j
	mpc toggle

super + {comma,period}
	mpc volume {-10, +10}

super + ctrl + {comma,period}
	mpc volume {-2, +2}

super + shift + {comma,period}
	mpc {prev, next}

# ..................................................................... hardware

super + shift + ctrl + j
	xdotool search --classname "Asunder" windowkill && rm -f /tmp/rulerrc:asunder || asunder

super + v
	xdotool search --name btop windowkill || btop

super + ctrl + v
	nvidia_fan toggle

# ................................................................. file manager

super + x
	xdotool search --onlyvisible --name yazi windowclose || yazi TMUX

super + ctrl + x
	notify critical 0 yazi '<b>root</b> user' ;\
	xdotool search --onlyvisible --name root windowclose || yazi ROOT

# ......................................................................... mail

super + y
	xdotool search --onlyvisible --classname aerc windowclose || aerc

# kak: filetype=sh

